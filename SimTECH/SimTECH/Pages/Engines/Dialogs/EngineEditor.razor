<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h5" Color="Color.Secondary">Modify engine</MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@Model">
            <MudTextField T="string" @bind-Value="Model.Name" Label="Name" />

            <MudStack Row="true" Spacing="4">
                <MudColorPicker @bind-Text="Model.Colour" Label="Colour" Placeholder="Select colour" />
                <MudColorPicker @bind-Text="Model.Accent" Label="Accent" Placeholder="Select accent" />
            </MudStack>

            <MudText Typo="Typo.subtitle1">Toggles</MudText>
            <MudDivider />
            <MudSwitchM3 @bind-Value="Model.Mark"
                         Label="Enable underscore marker"
                         Color="Color.Secondary"
                         ThumbIcon="@Icons.Material.Filled.Done"
                         ThumbOffIcon="@Icons.Material.Filled.Close" />

            <PreviewColourMix Colour="@Model.Colour" Accent="@Model.Accent" Text="@Model.Name" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] protected MudDialogInstance? EngineDialog { get; set; }

    [Parameter] public Engine? Engine { get; set; }

    private EditEngineModel Model { get; set; }

    protected override void OnInitialized()
    {
        Model = new EditEngineModel(Engine);
    }

    private void Submit()
    {
        if (Model.IsDirty)
        {
            var modEngine = Model.Record;
            EngineDialog?.Close(DialogResult.Ok(modEngine));
        }
    }

    private void Cancel() => EngineDialog?.Cancel();
}
