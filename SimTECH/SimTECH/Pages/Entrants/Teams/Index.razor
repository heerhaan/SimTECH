@page "/teams"

@using SimTECH.Pages.Entrants.Teams.Dialogs

@inject BreadcrumbProvider _bread
@inject TeamService _teamService
@inject TraitService _traitService
@inject IDialogService _dialogService

<PageTitle>Teams</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-4">
    <MudPaper MinHeight="60px">
        <MudStack Row="true" AlignItems="AlignItems.Center" Class="pa-4">
            <MudText Typo="Typo.h3">Teams</MudText>
            <MudSpacer />
            <MudButtonGroup Variant="Variant.Outlined" Color="Color.Tertiary" Size="Size.Small">
                <MudButton StartIcon="@Icons.Material.Filled.Archive" IconSize="Size.Small" OnClick="ToggleDisplayArchived" Class="btn-md">
                    @(showingArchived ? "Active" : "Archive")
                </MudButton>
                <MudButton StartIcon="@Icons.Material.Filled.Add" IconSize="Size.Small" OnClick="AddTeam" Class="btn-md">
                    New
                </MudButton>
            </MudButtonGroup>
        </MudStack>
    </MudPaper>
    <MudDataGrid T="Team" Items="@teams" RowsPerPage="15" Dense="true">
        <Columns>
            <PropertyColumn Property="e => e.Name" />
            <TemplateColumn T="Team" Title="Country" SortBy="e => e.Country">
                <CellTemplate>
                    <CountryNamedFlag Code="@context.Item.Country" Size="ElementSize.Small" Reverse="true" />
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn T="Team" Sortable="false">
                <CellTemplate>
                    <MudButtonGroup>
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="@(async () => await UpdateTeam(context.Item))" />
                        <MudIconButton Icon="@Icons.Material.Outlined.Delete" Color="Color.Error" OnClick="@(async () => await DeleteTeam(context.Item))" />
                    </MudButtonGroup>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
        <PagerContent>
            <MudDataGridPager T="Team" />
        </PagerContent>
    </MudDataGrid>
</MudContainer>

@code {
    private List<Team> teams = new();

    private bool showingArchived = false;

    protected override async Task OnInitializedAsync()
    {
        _bread.SetBreadcrumbs(new List<BreadcrumbItem>()
        {
            new BreadcrumbItem("Home", href: "/"),
            new BreadcrumbItem("Teams", href: "teams", disabled: true),
        });

        teams = await _teamService.GetTeams();
    }

    private async Task AddTeam() => await UpdateTeam(null);
    private async Task UpdateTeam(Team? item)
    {
        var parameters = new DialogParameters 
        { 
            ["Team"] = item,
            ["Traits"] = await _traitService.GetTraitsOfType(Entrant.Team)
        };

        var dialog = await _dialogService.ShowAsync<TeamEditor>("Modify team", parameters);
        var result = await dialog.Result;

        if (!result.Canceled && result.Data != null && result.Data is Team updatedItem)
        {
            await _teamService.UpdateTeam(updatedItem);
            teams = await _teamService.GetTeams();
        }
    }

    private async Task DeleteTeam(Team item)
    {
        await _teamService.ArchiveTeam(item);
        teams.Remove(item);
    }

    private async Task ToggleDisplayArchived()
    {
        if (showingArchived)
            teams = await _teamService.GetTeams();
        else
            teams = await _teamService.GetTeams(StateFilter.Archived);

        showingArchived = !showingArchived;
    }
}
