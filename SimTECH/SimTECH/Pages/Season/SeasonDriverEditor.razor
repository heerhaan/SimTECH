<MudDialog>
    <TitleContent>
        <MudText>Modify in-season driver</MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@Model">
            @if (Model.Id == 0 && Drivers is not null)
            {
                <MudSelect T="long" @bind-Value="@Model.DriverId" Label="Driver">
                    @foreach (var driver in Drivers)
                    {
                        <MudSelectItem Value="driver.Id">
                            <CountryFlag Code="driver.Country" Size="FlagSize.Tiny" />
                            @driver.FullName
                        </MudSelectItem>
                    }
                </MudSelect>
            }

            <MudNumericField @bind-Value="@Model.Number" Label="Number" Class="field-sm" />
            <MudNumericField @bind-Value="@Model.Skill" Label="Skill" Class="field-sm" />
            <MudNumericField @bind-Value="@Model.Reliability" Label="Reliability" Class="field-sm" />

            <MudSelect T="TeamRole" @bind-Value="@Model.TeamRole" Label="Team Role">
                @foreach (var select in EnumHelper.GetTeamRoleSelection())
                {
                    <MudSelectItem Value="select.Key">@select.Value</MudSelectItem>
                }
            </MudSelect>

            <MudSwitch @bind-Checked="@_isDropped" Label="Drop driver from team?" Color="Color.Error" />

            @if (SeasonTeams is not null && !_isDropped)
            {
                <MudSelect T="long" @bind-Value="@_seasonTeamId" Label="Team">
                    @foreach (var steam in SeasonTeams)
                    {
                        <MudSelectItem Value="steam.Id">
                            @steam.Name
                        </MudSelectItem>
                    }
                </MudSelect>
            }
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] protected MudDialogInstance? DriverDialog { get; set; }

    [Parameter] public long SeasonId { get; set; }
    [Parameter] public List<Driver>? Drivers { get; set; }
    [Parameter] public List<SeasonTeam>? SeasonTeams { get; set; }
    [Parameter] public SeasonDriver? SeasonDriver { get; set; }

    EditSeasonDriverModel Model = new();
    long _seasonTeamId;
    bool _isDropped = false;

    protected override void OnInitialized()
    {
        if (SeasonDriver != null)
        {
            Model = new EditSeasonDriverModel(SeasonDriver);
            Model.SeasonId = SeasonId;
            _seasonTeamId = Model.SeasonTeamId.GetValueOrDefault();
        }
    }

    private void Submit()
    {
        Model.SeasonTeamId = _isDropped ? null : _seasonTeamId;

        if (Model.IsDirty)
        {
            var modDriver = Model.Record;
            DriverDialog?.Close(DialogResult.Ok(modDriver));
        }
    }

    private void Cancel() => DriverDialog?.Cancel();
}
