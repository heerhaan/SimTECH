<MudTable T="EntrantDevelopLog"
          Items="@EntrantSummary.EntrantLogs.OrderBy(e => e.Name)"
          GroupBy="@_entrantDefinition"
          GroupHeaderStyle="background-color:var(--mud-palette-background-grey)"
          FixedHeader="true"
          Bordered="true"
          Dense="true"
          Class="extra-dense"
          id="@EntrantSummary.SummaryElementId">
    <ToolBarContent>
        <MudText Typo="Typo.h5" Color="Color.Tertiary">@EntrantSummary.EntrantGroup.ToString()</MudText>
        <MudDivider Vertical="true" Class="mx-2" />
        <MudText Typo="Typo.h5">Boing</MudText>
        <MudSpacer />
        <ScreenshotIconButton TargetId="@EntrantSummary.SummaryElementId" />
    </ToolBarContent>
    <HeaderContent>
        @foreach (var (aspect, i) in EntrantSummary.Aspects.OrderBy(e => e.ReadableAspect()).WithIndex())
        {
            <MudTh Class="@($"overflow-hider {InspectTheWheel(i)}")">
                @aspect.ReadableAspect()
            </MudTh>
        }
    </HeaderContent>
    <GroupHeaderTemplate>
        <MudTh Class="mud-table-cell-custom-group" colspan="10">
            <MudText>@context.Key</MudText>
        </MudTh>
    </GroupHeaderTemplate>
    <RowTemplate>
        @foreach (var (dev, i) in context.DevelopedAspects.OrderBy(e => e.Key.ReadableAspect()).WithIndex())
        {
            <MudTd Class="@(InspectTheWheel(i))">
                <MudStack Row="true" Spacing="0" AlignItems="AlignItems.Center" Justify="Justify.Center">
                    <MudText Typo="Typo.caption" Style="color:white !important">@(dev.Value.Item2 - dev.Value.Item1)</MudText>
                        <MudIcon Icon="@IconCollection.ArrowNarrowRight" Size="Size.Small"></MudIcon>
                        <GradientColour Min="@EntrantSummary.MinMaxValues[dev.Key].Item1"
                                        Max="@EntrantSummary.MinMaxValues[dev.Key].Item2"
                                        Value="@dev.Value.Item1">
                            <MudText Typo="Typo.caption">@dev.Value.Item1</MudText>
                        </GradientColour>
                        <MudIcon Icon="@IconCollection.ArrowNarrowRight" Size="Size.Small"></MudIcon>
                        <MudText Typo="Typo.caption" Style="color:white !important">@dev.Value.Item2</MudText>
                    </MudStack>
                </MudTd>
        }
    </RowTemplate>
</MudTable>

@code {
    [Parameter] public DevelopSummary EntrantSummary { get; set; }

    private static readonly string[] cycleWheel = new[]
    {
        "fallback-muted-background-primary",
        "fallback-muted-background-secondary",
        "fallback-muted-background-tertiary"
    };

    private TableGroupDefinition<EntrantDevelopLog> _entrantDefinition = new()
        {
            GroupName = "Entrant",
            Selector = (e) => e.Name
        };

    private string InspectTheWheel(int numCycle)
    {
        numCycle %= cycleWheel.Length;
        return cycleWheel[numCycle];
    }
}
