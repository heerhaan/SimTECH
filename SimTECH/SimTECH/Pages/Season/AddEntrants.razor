@inject EngineService EngineService
@inject TeamService TeamService
@inject DriverService DriverService
@inject SeasonEntrantService EntrantService

<MudForm Model="@model">
    <MudContainer Class="@(stepNumber == 1 ? "" : "d-none")">
        <MudGrid>
            <MudItem xs="6">
                <MudPaper>
                    <MudText>Entered engines</MudText>
                    <MudTable T="Engine" Items="@model.BaseEngines" OnRowClick="RemoveEngine" Hover="true">
                        <RowTemplate>
                            <MudTd DataLabel="Name">@context.Name</MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudPaper>
            </MudItem>
            <MudItem xs="6">
                <MudPaper>
                    <MudText>Available engines</MudText>
                    <MudTable T="Engine" Items="@Engines" OnRowClick="EnterEngine" Hover="true">
                        <RowTemplate>
                            <MudTd DataLabel="Name">@context.Name</MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </MudContainer>
    <MudContainer>
        <MudGrid>
            <MudItem xs="6">
                <MudPaper>
                    <MudText>Entered teams</MudText>
                    <MudTable T="Team" Items="@model.BaseTeams" OnRowClick="RemoveTeam" Hover="true">
                        <RowTemplate>
                            <MudTd DataLabel="Name">
                                <CountryFlag Code="@context.Country" />
                                @context.Name
                            </MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudPaper>
            </MudItem>
            <MudItem xs="6">
                <MudPaper>
                    <MudText>Available teams</MudText>
                    <MudTable T="Team" Items="@Teams" OnRowClick="EnterTeam" Hover="true">
                        <RowTemplate>
                            <MudTd DataLabel="Name">
                                <CountryFlag Code="@context.Country" />
                                @context.Name
                            </MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </MudContainer>
    <MudContainer>
        <MudGrid>
            <MudItem xs="6">
                <MudPaper>
                    <MudText>Entered drivers</MudText>
                    <MudTable T="Driver" Items="@model.BaseDrivers" OnRowClick="RemoveDriver" Hover="true">
                        <RowTemplate>
                            <MudTd DataLabel="Name">
                                <CountryFlag Code="@context.Country" />
                                @context.FullName
                            </MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudPaper>
            </MudItem>
            <MudItem xs="6">
                <MudPaper>
                    <MudText>Available drivers</MudText>
                    <MudTable T="Driver" Items="@Drivers" OnRowClick="EnterDriver" Hover="true">
                        <RowTemplate>
                            <MudTd DataLabel="Name">
                                <CountryFlag Code="@context.Country" />
                                @context.FullName
                            </MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </MudContainer>
</MudForm>

@code {
    [CascadingParameter] public Season Season { get; set; }

    private AddEntrantsModel model = new();
    private List<Engine> Engines = new();
    private List<Team> Teams = new();
    private List<Driver> Drivers = new();

    private int stepNumber = 1;

    protected override async Task OnInitializedAsync()
    {
        Engines = await EngineService.GetEngines();
        Teams = await TeamService.GetTeams();
        Drivers = await DriverService.GetDrivers();
    }

    #region event handlers

    private void EnterEngine(TableRowClickEventArgs<Engine> rowClickEvent)
    {
        var selectedEngine = rowClickEvent.Item;

        model.BaseEngines.Add(selectedEngine);
        Engines.Remove(selectedEngine);
    }

    private void RemoveEngine(TableRowClickEventArgs<Engine> rowClickEvent)
    {
        var selectedEngine = rowClickEvent.Item;

        Engines.Add(selectedEngine);
        model.BaseEngines.Remove(selectedEngine);
    }

    private void EnterTeam(TableRowClickEventArgs<Team> rowClickEvent)
    {
        var selectedTeam = rowClickEvent.Item;

        model.BaseTeams.Add(selectedTeam);
        Teams.Remove(selectedTeam);
    }

    private void RemoveTeam(TableRowClickEventArgs<Team> rowClickEvent)
    {
        var selectedTeam = rowClickEvent.Item;

        Teams.Add(selectedTeam);
        model.BaseTeams.Remove(selectedTeam);
    }

    private void EnterDriver(TableRowClickEventArgs<Driver> rowClickEvent)
    {
        var selectedDriver = rowClickEvent.Item;

        model.BaseDrivers.Add(selectedDriver);
        Drivers.Remove(selectedDriver);
    }

    private void RemoveDriver(TableRowClickEventArgs<Driver> rowClickEvent)
    {
        var selectedDriver = rowClickEvent.Item;

        Drivers.Add(selectedDriver);
        model.BaseDrivers.Remove(selectedDriver);
    }

    #endregion

    public class AddEntrantsModel
    {
        public List<Engine> BaseEngines { get; set; } = new();
        public List<Team> BaseTeams { get; set; } = new();
        public List<Driver> BaseDrivers { get; set; } = new();
    }
}
