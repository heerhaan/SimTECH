@inject ManufacturerService ManufacturerService
@inject SeasonEntrantService EntrantService
@inject TeamService TeamService
@inject IDialogService DialogService

<MudDataGrid T="SeasonTeam" Items="@SeasonTeamEntrants" Class="my-2">
    <ToolBarContent>
        <MudText Typo="Typo.h4">Teams</MudText>
        <MudSpacer />
        <MudButton Variant="Variant.Filled" Color="Color.Success" StartIcon="@Icons.Material.Outlined.Add" OnClick="EnterTeam">New</MudButton>
    </ToolBarContent>
    <Columns>
        <PropertyColumn Property="e => e.Name" CellStyleFunc="@ViewHelper.TeamBorderRightStyleFunc" />
        <TemplateColumn T="SeasonTeam" SortBy="e => e.Team.Country" Title="Country">
            <CellTemplate>
                @if (context.Item.Team is not null)
                {
                    <CountryFlag Code="@context.Item.Team.Country" Size="FlagSize.Small" IncludeName="true" />
                }
                else
                {
                    <MudText>[wtf, no base team?]</MudText>
                }
            </CellTemplate>
        </TemplateColumn>
        <PropertyColumn Property="e => e.Principal" />
        <PropertyColumn Property="e => e.BaseValue" />
        <TemplateColumn T="SeasonTeam" Title="A/C/P" Sortable="false">
            <CellTemplate>
                <MudText>@context.Item.Aero / @context.Item.Chassis / @context.Item.Powertrain</MudText>
            </CellTemplate>
        </TemplateColumn>
        <PropertyColumn Property="e => e.Reliability" />
        <TemplateColumn T="SeasonTeam" SortBy="e => e.SeasonEngine.Name" Title="Engine">
            <CellTemplate>
                <MudText>
                    @(SeasonEngineData.Find(e => e.Id == context.Item.SeasonEngineId)?.Name ?? "[error: wtf where engine?]")
                </MudText>
            </CellTemplate>
        </TemplateColumn>
        <TemplateColumn T="SeasonTeam" SortBy="e => e.Manufacturer.Name" Title="Manufacturer">
            <CellTemplate>
                <MudText>
                    @(ManufacturerData.Find(e => e.Id == context.Item.ManufacturerId)?.Name ?? "[error: wtf where manufacturer?]")
                </MudText>
            </CellTemplate>
        </TemplateColumn>
        <TemplateColumn T="SeasonTeam" Sortable="false" CellClass="d-flex justify-end">
            <CellTemplate>
                <MudButtonGroup>
                    <MudIconButton Size="Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="@(async () => await UpdateTeamEntrant(context.Item))" />
                </MudButtonGroup>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>

@code {
    [CascadingParameter] public Season Season { get; set; }

    private List<SeasonTeam> SeasonTeamEntrants { get; set; }
    private List<Team> TeamData { get; set; }
    private List<SeasonEngine> SeasonEngineData { get; set; }
    private List<Manufacturer> ManufacturerData { get; set; }

    protected override async Task OnInitializedAsync()
    {
        SeasonTeamEntrants = await EntrantService.GetSeasonTeams(Season.Id);
        TeamData = await TeamService.GetTeams();
        SeasonEngineData = await EntrantService.GetSeasonEngines(Season.Id);
        ManufacturerData = await ManufacturerService.GetManufacturers();
    }

    async Task EnterTeam() => await UpdateTeamEntrant(new SeasonTeam());
    async Task UpdateTeamEntrant(SeasonTeam item)
    {
        var parameters = new DialogParameters
            {
                ["SeasonId"] = Season.Id,
                ["Teams"] = TeamData,
                ["Manufacturers"] = ManufacturerData,
                ["SeasonEngines"] = SeasonEngineData,
                ["SeasonTeam"] = item,
            };

        var dialog = await DialogService.ShowAsync<SeasonTeamEditor>("Modify in-season team", parameters);
        var result = await dialog.Result;

        if (!result.Canceled && result.Data != null && result.Data is SeasonTeam updatedTeam)
        {
            await EntrantService.UpdateSeasonTeam(updatedTeam);
            SeasonTeamEntrants = await EntrantService.GetSeasonTeams(Season.Id);
        }
    }
}
