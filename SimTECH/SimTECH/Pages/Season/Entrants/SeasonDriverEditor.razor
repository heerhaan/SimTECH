@inject DriverService _driverService

<MudDialog>
    <TitleContent>
        <MudText>Modify in-season driver</MudText>
    </TitleContent>
    <DialogContent>
        <MudContainer>
            <MudPaper MinWidth="750px">
                @if (!loading)
                {
                    <MudStack>
                        @if (Model.Id == 0 && Drivers != null)
                        {
                            <MudSelect T="long" @bind-Value="@Model.DriverId" Label="Driver" Style="width: 400px">
                                @foreach (var driver in Drivers)
                                {
                                    <MudSelectItem Value="@driver.Id">
                                        <MudStack Row="true" AlignItems="AlignItems.Center" Class="pa-0">
                                            <MudText>@driver.FullName</MudText>
                                            <MudSpacer />
                                            <CountryFlag Code="@driver.Country" Size="ElementSize.Tiny" />
                                        </MudStack>
                                    </MudSelectItem>
                                }
                            </MudSelect>
                        }

                        <MudNumericField @bind-Value="@Model.Number" Label="Number" Class="field-sm" />
                        <MudNumericField @bind-Value="@Model.Skill" Label="Skill" Class="field-sm" />
                        <MudNumericField @bind-Value="@Model.Reliability" Label="Reliability" Class="field-sm" />
                        <MudNumericField @bind-Value="@Model.Attack" Label="Attack" Class="field-sm" />
                        <MudNumericField @bind-Value="@Model.Defense" Label="Defense" Class="field-sm" />

                        <MudSelect T="TeamRole" @bind-Value="@Model.TeamRole" Label="Team role" Style="width: 400px">
                            @foreach (var select in EnumHelper.GetTeamRoleSelection)
                            {
                                <MudSelectItem Value="select.Key">@select.Value</MudSelectItem>
                            }
                        </MudSelect>

                        <MudSwitchM3 @bind-Checked="@isDropped"
                                     ThumbIcon="@Icons.Material.Filled.Done"
                                     ThumbOffIcon="@Icons.Material.Filled.Close"
                                     Label="Drop driver from team?"
                                     Color="Color.Error" />

                        @if (!isDropped)
                        {
                            <MudSelect T="long" @bind-Value="@seasonTeamId" Label="Team" Style="width: 400px">
                                @foreach (var steam in SeasonTeams)
                                {
                                    <MudSelectItem Value="steam.Id">@steam.Name</MudSelectItem>
                                }
                            </MudSelect>
                        }
                    </MudStack>
                }
            </MudPaper>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] protected MudDialogInstance? DriverDialog { get; set; }

    [Parameter, EditorRequired] public long SeasonId { get; set; }
    [Parameter, EditorRequired] public List<SeasonTeam> SeasonTeams { get; set; }
    [Parameter] public SeasonDriver? SeasonDriver { get; set; }

    EditSeasonDriverModel Model;
    List<Driver>? Drivers;
    long seasonTeamId;
    bool loading = true;
    bool isDropped = false;

    protected override async Task OnInitializedAsync()
    {
        Drivers = await _driverService.GetAvailableDrivers();

        Model = new EditSeasonDriverModel(SeasonDriver);
        Model.SeasonId = SeasonId;
        seasonTeamId = Model.SeasonTeamId.GetValueOrDefault();

        loading = false;
    }

    private void Submit()
    {
        Model.SeasonTeamId = isDropped ? null : seasonTeamId;

        if (Model.IsDirty)
        {
            DriverDialog?.Close(DialogResult.Ok(Model.Record));
        }
    }

    private void Cancel() => DriverDialog?.Cancel();
}
