<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="px-0">
    <MudPaper MinHeight="60px">
        <MudStack Row="true" AlignItems="AlignItems.Center" Class="pa-4">
            <MudText Typo="Typo.h3">Teams</MudText>
            <MudSpacer />
            <MudButton Variant="Variant.Outlined" Color="Color.Success" StartIcon="@Icons.Material.Outlined.Add" OnClick="EnterItem">New</MudButton>
        </MudStack>
    </MudPaper>
    <MudDataGrid T="SeasonTeam" Items="@TeamEntrants" Dense="true" Class="overflow-hider">
        <Columns>
            <TemplateColumn Sortable="false" Class="accent-cell">
                <CellTemplate>
                    <SmolAccent Colour="@context.Item?.Colour" />
                </CellTemplate>
            </TemplateColumn>
            <PropertyColumn Property="e => e!.Name" />
            <TemplateColumn T="SeasonTeam" SortBy="e => e.Team.Country" Title="Country">
                <CellTemplate>
                    <CountryNamedFlag Code="@context.Item.Team.Country" Size="ElementSize.Small" Reverse="true" Typo="Typo.body2" />
                </CellTemplate>
            </TemplateColumn>
            <PropertyColumn Property="e => e!.Principal" />
            <PropertyColumn Property="e => e!.BaseValue" Title="Base" CellClass="font-caption" />
            <TemplateColumn T="SeasonTeam" Title="A/C/P" Sortable="false">
                <CellTemplate>
                    <MudText Typo="Typo.caption">@context.Item.Aero / @context.Item.Chassis / @context.Item.Powertrain</MudText>
                </CellTemplate>
            </TemplateColumn>
            <PropertyColumn Property="e => e!.Reliability" CellClass="font-caption" />
            @*<TemplateColumn T="SeasonTeam" SortBy="e => e.SeasonEngine.Name" Title="Engine">
                <CellTemplate>
                    <MudText>
                        @(SeasonEngineData.Find(e => e.Id == context.Item.SeasonEngineId)?.Name ?? "WTF WHERE ENGINE?")
                    </MudText>
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn T="SeasonTeam" SortBy="e => e.Manufacturer.Name" Title="Manufacturer">
                <CellTemplate>
                    <MudText>
                        @(ManufacturerData.Find(e => e.Id == context.Item.ManufacturerId)?.Name ?? "WTF WHERE TYRE?")
                    </MudText>
                </CellTemplate>
            </TemplateColumn>*@
            <TemplateColumn T="SeasonTeam" Sortable="false">
                <CellTemplate>
                    <MudButtonGroup>
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="@(async () => await UpdateItem(context.Item))" />
                    </MudButtonGroup>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
</MudContainer>

@code {
    [CascadingParameter] public Season Season { get; set; }
    [Parameter] public IEnumerable<SeasonTeam> TeamEntrants { get; set; } = Enumerable.Empty<SeasonTeam>();
    [Parameter] public EventCallback<SeasonTeam?> OnEditorOpen { get; set; }

    async Task EnterItem() => await UpdateItem(null);
    async Task UpdateItem(SeasonTeam? item)
    {
        await OnEditorOpen.InvokeAsync(item);
    }
}
