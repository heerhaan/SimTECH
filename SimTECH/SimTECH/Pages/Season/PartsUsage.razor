@page "/components/{SeasonId:long}"
@inject BreadcrumbProvider _bread
@inject SeasonService _seasonService

<PageTitle>Components</PageTitle>

<MudContainer>
    @if (PartsPerDriver != null)
    {
        <MudGrid>
            <MudItem xs="9">
                <MudPaper Class="mud-height-full">
                    <MudTable Items="@PartsPerDriver">
                        <ToolBarContent>
                            <MudText Typo="Typo.h4">Components</MudText>
                        </ToolBarContent>
                        <HeaderContent>
                            <MudTh>Name</MudTh>
                            <MudTh Class="number-col">No</MudTh>
                            <MudTh>Accidents</MudTh>
                            <MudTh>Collisions</MudTh>
                            <MudTh>Engines</MudTh>
                            <MudTh>Electrics</MudTh>
                            <MudTh>Hydraulics</MudTh>
                            <MudTh>DNF</MudTh>
                            <MudTh>DSQ</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd>@context.Name</MudTd>
                            <MudTd Class="number-col" Style="@(ViewHelper.SetFullColourstyle(context.Colour, context.Accent))">
                                @context.Number
                            </MudTd>
                            <MudTd>@context.Accidents</MudTd>
                            <MudTd>@context.Collisions</MudTd>
                            <MudTd>@context.Engines</MudTd>
                            <MudTd>@context.Electrics</MudTd>
                            <MudTd>@context.Hydraulics</MudTd>
                            <MudTd>@context.TotalDnf</MudTd>
                            <MudTd>@context.TotalDsq</MudTd>
                        </RowTemplate>
                        <FooterContent>
                            <MudTd>LIMIT</MudTd>
                            <MudTd>3</MudTd>
                            <MudTd>3</MudTd>
                            <MudTd>3</MudTd>
                            <MudTd>3</MudTd>
                            <MudTd>3</MudTd>
                            <MudTd>-</MudTd>
                            <MudTd>-</MudTd>
                        </FooterContent>
                    </MudTable>
                </MudPaper>
            </MudItem>
            <MudItem xs="3">
                <MudPaper Class="pa-4 mud-height-full">
                    <MudText Typo="Typo.h4">Penalties</MudText>
                    <MudList>
                        @foreach (var driver in PartsPerDriver.Where(e => e.GivenPenalties?.Any() == true))
                        {
                            @foreach (var penalty in driver.GivenPenalties)
                            {
                                <MudListItem>
                                    <MudText Typo="Typo.body2">Round @penalty.Round</MudText>
                                    <MudText>@driver.Name</MudText>
                                    <MudText>+@(penalty.Punishment)</MudText>
                                </MudListItem>
                            }
                        }
                    </MudList>
                </MudPaper>
            </MudItem>
        </MudGrid>
    }
</MudContainer>

@code {
    [Parameter] public long SeasonId { get; set; }

    List<PartsUsageModel> PartsPerDriver;

    protected override async Task OnInitializedAsync()
    {
        _bread.SetBreadcrumbs(new List<BreadcrumbItem>()
        {
            new BreadcrumbItem("Home", href: "/"),
            new BreadcrumbItem("Seasons", href: "seasons}"),
            new BreadcrumbItem("Overview", href: $"overview/{SeasonId}"),
            new BreadcrumbItem("Components", href: $"components/{SeasonId}", disabled: true),
        });

        PartsPerDriver = await _seasonService.GetPartsUsageModel(SeasonId);
    }
}
