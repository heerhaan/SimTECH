@page "/components/{SeasonId:long}"
@inject BreadcrumbProvider Bread

<PageTitle>Components</PageTitle>

<MudContainer>
    <MudGrid>
        <MudItem xs="9">
            <MudTable Items="@PartsPerDriver">
                <ToolBarContent>
                    <MudText Typo="Typo.h4">Components</MudText>
                </ToolBarContent>
                <HeaderContent>
                    <MudTh>Name</MudTh>
                    <MudTh>Engines</MudTh>
                    <MudTh>Electrics</MudTh>
                    <MudTh>Accidents</MudTh>
                    <MudTh>Collisions</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>@context.Name</MudTd>
                    <MudTd>0</MudTd>
                    <MudTd>0</MudTd>
                    <MudTd>0</MudTd>
                    <MudTd>0</MudTd>
                </RowTemplate>
                <FooterContent>
                    <MudTd>LIMIT</MudTd>
                    <MudTd>0</MudTd>
                    <MudTd>0</MudTd>
                    <MudTd>0</MudTd>
                    <MudTd>0</MudTd>
                </FooterContent>
            </MudTable>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    [Parameter] public long SeasonId { get; set; }

    List<PartsUsageModel> PartsPerDriver;

    protected override Task OnInitializedAsync()
    {
        Bread.SetBreadcrumbs(new List<BreadcrumbItem>()
        {
            new BreadcrumbItem("Overview", href: $"overview/{SeasonId}"),
            new BreadcrumbItem("Components", href: $"components/{SeasonId}"),
        });

        return base.OnInitializedAsync();
    }
}
