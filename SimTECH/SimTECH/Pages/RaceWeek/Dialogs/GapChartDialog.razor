<MudDialog>
    <DialogContent>
        <MudPaper MinWidth="1500px" MinHeight="950px" Class="px-4 py-2" id="gapper-chart-container">
            <MudStack Row="true" AlignItems="AlignItems.Center" Class="px-0 pb-2">
                <MudIcon Icon="@Icons.Material.Filled.SsidChart" Class="mr-3 mb-n1" />
                <MudText Typo="Typo.h5">Gap to race leader</MudText>
                <MudSpacer />
                <MudButtonGroup Variant="Variant.Text" Color="Color.Secondary">
                    <ScreenshotIconButton TargetId="gapper-chart-container" Class="btn-sm" />
                    <MudIconButton Icon="@Icons.Material.Filled.Close" OnClick="CloseDialog" Class="btn-sm" />
                </MudButtonGroup>
            </MudStack>
            <MudContainer MaxWidth="MaxWidth.False">
                @if (!loading)
                {
                    <ApexCharts.ApexChart TItem="DataPoint" Title="Gaps to leader" Options="@options" Width="1400" Height="900">
                        @foreach (var driver in dataSets)
                        {
                            <ApexCharts.ApexPointSeries TItem="DataPoint"
                                                        Items="@driver.DataPoints"
                                                        Name="@driver.Label"
                                                        SeriesType="ApexCharts.SeriesType.Line"
                                                        XValue="e => e.XData"
                                                        YValue="e => e.YData"
                                                        OrderBy="e => e.X"
                                                        Stroke="@driver.Stroke" />
                        }
                    </ApexCharts.ApexChart>
                }
            </MudContainer>
        </MudPaper>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter] protected MudDialogInstance? ChartDialog { get; set; }
    [Parameter, EditorRequired] public List<RaceDriver> Drivers { get; set; }

    ApexCharts.ApexChartOptions<DataPoint> options;
    List<DataSet> dataSets = new();

    bool loading = true;

    protected override void OnInitialized()
    {
        options = Globals.CreateDefaultChartOptions;

        options.Yaxis = new();
        options.Yaxis.Add(new ApexCharts.YAxis { Reversed = true });

        var leaderScores = Drivers.First(e => e.Position == 1).LapScores;

        var seenTeamIdentifiers = new List<long>(Drivers.Count);

        foreach (var driver in Drivers)
        {
            var dataSet = new DataSet { Label = driver.FullName };

            int gap = 0;
            foreach (var driverScore in driver.LapScores.OrderBy(e => e.Order))
            {
                var compareLeader = leaderScores.First(e => e.Order == driverScore.Order);

                gap += compareLeader.Score - driverScore.Score;

                dataSet.DataPoints.Add(new DataPoint(driverScore.Order, gap));
            }

            var sameSeenTeams = seenTeamIdentifiers.Count(e => e == driver.SeasonTeamId);

            dataSet.Stroke = new ApexCharts.SeriesStroke { Color = driver.Colour, DashSpace = (2 * sameSeenTeams), Width = 4 };

            seenTeamIdentifiers.Add(driver.SeasonTeamId);
            dataSets.Add(dataSet);
        }

        loading = false;
    }

    private void CloseDialog()
    {
        ChartDialog?.Close();
    }
}
