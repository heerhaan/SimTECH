@inject IOptions<SimConfig> _config

<MudDialog Class="dialog-shadow">
    <TitleContent>
        <MudText>Pick here which tyre the driver will start on.</MudText>
    </TitleContent>
    <DialogContent>
        @if (Tyres?.Any() == true)
        {
            <MudTable Items="@Tyres">
                <HeaderContent>
                    <MudTh>Tyre</MudTh>
                    <MudTh>Pace</MudTh>
                    <MudTh>Wear</MudTh>
                    <MudTh>Length</MudTh>
                    <MudTh></MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>
                        <MudStack Row="true" AlignItems="AlignItems.Center">
                            <TyreElement Colour="@context.Colour">
                                @context.Name.ElementAt(0)
                            </TyreElement>
                            <MudText>@context.Name</MudText>
                        </MudStack>
                    </MudTd>
                    <MudTd>
                        <MudText Typo="Typo.caption">@context.Pace</MudText>
                    </MudTd>
                    <MudTd>
                        <MudStack Row="true" Spacing="1" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
                            <MudText Typo="Typo.caption">@context.WearMin</MudText>
                            <MudIcon Size="Size.Small" Icon="@IconCollection.ArrowMoveHorizontal" />
                            <MudText Typo="Typo.caption">@context.WearMax</MudText>
                        </MudStack>
                    </MudTd>
                    <MudTd>
                        <MudText>@(context.ExpectedLength(advanceDistance))km</MudText>
                    </MudTd>
                    <MudTd Class="d-flex justify-end">
                        <MudButton Variant="Variant.Outlined"
                                   Color="Color.Secondary"
                                   Size="Size.Medium"
                                   OnClick="(() => PickOption(context))"
                                   Class="mud-height-full">
                            Select
                        </MudButton>
                    </MudTd>
                </RowTemplate>
            </MudTable>
        }
        else
        {
            <MudAlert>There is a serious lack of available tyres here, so start adding them!</MudAlert>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] protected MudDialogInstance? PickerDialog { get; set; }

    [Parameter] public long ResultId { get; set; }
    [Parameter] public List<Tyre> Tyres { get; set; }

    private int advanceDistance = 10;

    protected override void OnInitialized()
    {
        advanceDistance = _config.Value.CalculationDistance;
    }

    private void PickOption(Tyre tyre) => PickerDialog?.Close(DialogResult.Ok(tyre));

    private void Cancel() => PickerDialog?.Cancel();
}
