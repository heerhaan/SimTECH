@page "/legacy"
@inject BreadcrumbProvider _bread

<MudContainer MaxWidth="MaxWidth.ExtraLarge">
    <MudPaper>
        <MudGrid Spacing="1">
            <MudItem xs="12">
                <MudPaper Elevation="15" Height="75px" Class="d-flex flex-column justify-center align-center pa-4">
                    <MudText Typo="Typo.h3">Legacy leaderboard</MudText>
                </MudPaper>
            </MudItem>
            @foreach (var leaderboard in legacyLeaderboards)
            {
                <MudItem xs="4">
                    <MudPaper Elevation="15">
                        <MudTable T="LegacySimData" Items="@leaderboard.Value.OrderBy(e => e.Rank)">
                            <ToolBarContent>
                                <MudText Typo="Typo.h5">@leaderboard.Key</MudText>
                            </ToolBarContent>
                            <HeaderContent>
                                <MudTh>Rank</MudTh>
                                <MudTh>Driver</MudTh>
                                <MudTh>Value</MudTh>
                                <MudTh>User</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd>@context.Rank</MudTd>
                                <MudTd>
                                    <MudStack Row="true" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center" Class="pa-0">
                                        <MudText Class="overflow-hider">@context.Name</MudText>
                                        <CountryFlag Code="@context.Country" Size="ElementSize.Small" />
                                    </MudStack>
                                </MudTd>
                                <MudTd>@context.Value</MudTd>
                                <MudTd>@context.User</MudTd>
                            </RowTemplate>
                        </MudTable>
                    </MudPaper>
                </MudItem>
            }
        </MudGrid>
    </MudPaper>
</MudContainer>

@code {
    // An overview of all the records of Formula Dream TL1
    private static readonly Dictionary<string, LegacySimData[]> legacyLeaderboards = new()
        {
            {
                "Wins",
                new[]
                {
                    new LegacySimData(1, "Filip van der Bergh", Country.NL, 38, "Sokje"),
                    new LegacySimData(2, "Buzz Hahn", Country.ZA, 36, "Haan"),
                    new LegacySimData(3, "Frankku Piirrellä", Country.FI, 31, "Frank"),
                    new LegacySimData(4, "Barack Yobama", Country.FJ, 22, "AI"),
                    new LegacySimData(5, "", Country.ZA, 22, "AI"),
                    new LegacySimData(6, "", Country.ZA, 22, "Dezent"),
                    new LegacySimData(7, "", Country.ZA, 20, "Yoshi"),
                    new LegacySimData(8, "", Country.ZA, 18, "Rex"),
                    new LegacySimData(9, "Aalp Aca", Country.ZA, 18, "Aalp"),
                    new LegacySimData(10, "", Country.ZA, 18, "Damian"),
                }
            },
            {
                "Championships",
                new[]
                {
                    new LegacySimData(1, "Filip van der Bergh", Country.NL, 2, "Sokje"),
                    new LegacySimData(2, "", Country.KP, 2, ""),
                    new LegacySimData(3, "", Country.KP, 1, ""),
                    new LegacySimData(4, "", Country.KP, 1, ""),
                    new LegacySimData(5, "", Country.KP, 1, ""),
                    new LegacySimData(6, "", Country.KP, 1, ""),
                    new LegacySimData(7, "", Country.KP, 1, ""),
                    new LegacySimData(8, "", Country.KP, 1, ""),
                    new LegacySimData(9, "", Country.KP, 1, ""),
                    new LegacySimData(10, "", Country.KP, 1, ""),
                }
            },
            {
                "Podiums",
                new[]
                {
                    new LegacySimData(1, "Filip van der Bergh", Country.NL, 113, "Sokje"),
                    new LegacySimData(2, "", Country.KP, 1, ""),
                    new LegacySimData(3, "", Country.KP, 1, ""),
                    new LegacySimData(4, "", Country.KP, 1, ""),
                    new LegacySimData(5, "", Country.KP, 1, ""),
                    new LegacySimData(6, "", Country.KP, 1, ""),
                    new LegacySimData(7, "", Country.KP, 1, ""),
                    new LegacySimData(8, "", Country.KP, 1, ""),
                    new LegacySimData(9, "", Country.KP, 1, ""),
                    new LegacySimData(10, "", Country.KP, 1, ""),
                }
            },
            {
                "Starts",
                new[]
                {
                    new LegacySimData(1, "Filip van der Bergh", Country.NL, 549, "Sokje"),
                    new LegacySimData(2, "", Country.KP, 1, ""),
                    new LegacySimData(3, "", Country.KP, 1, ""),
                    new LegacySimData(4, "", Country.KP, 1, ""),
                    new LegacySimData(5, "", Country.KP, 1, ""),
                    new LegacySimData(6, "", Country.KP, 1, ""),
                    new LegacySimData(7, "", Country.KP, 1, ""),
                    new LegacySimData(8, "", Country.KP, 1, ""),
                    new LegacySimData(9, "", Country.KP, 1, ""),
                    new LegacySimData(10, "", Country.KP, 1, ""),
                }
            },
            {
                "DNFs",
                new[]
                {
                    new LegacySimData(1, "", Country.KP, 1, ""),
                    new LegacySimData(2, "", Country.KP, 1, ""),
                    new LegacySimData(3, "", Country.KP, 1, ""),
                    new LegacySimData(4, "", Country.KP, 1, ""),
                    new LegacySimData(5, "", Country.KP, 1, ""),
                    new LegacySimData(6, "", Country.KP, 1, ""),
                    new LegacySimData(7, "", Country.KP, 1, ""),
                    new LegacySimData(8, "", Country.KP, 1, ""),
                    new LegacySimData(9, "", Country.KP, 1, ""),
                    new LegacySimData(10, "", Country.KP, 1, ""),
                }
            },
            {
                "Poles",
                new[]
                {
                    new LegacySimData(1, "Filip van der Bergh", Country.NL, 60, "Lolsokje"),
                    new LegacySimData(2, "", Country.KP, 1, ""),
                    new LegacySimData(3, "", Country.KP, 1, ""),
                    new LegacySimData(4, "", Country.KP, 1, ""),
                    new LegacySimData(5, "", Country.KP, 1, ""),
                    new LegacySimData(6, "", Country.KP, 1, ""),
                    new LegacySimData(7, "", Country.KP, 1, ""),
                    new LegacySimData(8, "", Country.KP, 1, ""),
                    new LegacySimData(9, "", Country.KP, 1, ""),
                    new LegacySimData(10, "", Country.KP, 1, ""),
                }
            },
        };

    protected override void OnInitialized()
    {
        _bread.SetBreadcrumbs(new List<BreadcrumbItem>()
        {
            new BreadcrumbItem("Home", href: ""),
            new BreadcrumbItem("Legacy", href: "legacy", disabled: true),
        });
    }

    internal class LegacySimData
    {
        public LegacySimData(int rank, string name, Country country, int value, string? user = null)
        {
            Rank = rank;
            Name = name;
            Country = country;
            Value = value;
            User = user ?? "A.I.";
        }

        public int Rank { get; set; }
        public string Name { get; set; }
        public Country Country { get; set; }
        public double Value { get; set; }
        public string User { get; set; }
    }
}
