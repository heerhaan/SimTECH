@page "/legacy"
@inject BreadcrumbProvider _bread

<MudContainer MaxWidth="MaxWidth.ExtraLarge">
    <MudPaper>
        <MudGrid Spacing="1">
            <MudItem xs="12">
                <MudPaper Elevation="15" Height="75px" Class="d-flex flex-column justify-center align-center pa-4">
                    <MudText Typo="Typo.h3">Legacy leaderboard</MudText>
                </MudPaper>
            </MudItem>
            @foreach (var leaderboard in legacyRecordsData)
            {
                <MudItem xs="4">
                    <MudPaper Elevation="15">
                        <MudTable T="LegacySimData" Items="@leaderboard.Value.OrderBy(e => e.Rank)">
                            <ToolBarContent>
                                <MudText Typo="Typo.h5">@leaderboard.Key</MudText>
                            </ToolBarContent>
                            <HeaderContent>
                                <MudTh>Rank</MudTh>
                                <MudTh>Driver</MudTh>
                                <MudTh>Value</MudTh>
                                <MudTh>User</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd>@context.Rank</MudTd>
                                <MudTd>
                                    <MudStack Row="true" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center" Class="pa-0">
                                        <MudText Class="overflow-hider">@context.Name</MudText>
                                        <CountryFlag Code="@context.Country" Size="ElementSize.Small" />
                                    </MudStack>
                                </MudTd>
                                <MudTd>@context.Value</MudTd>
                                <MudTd>@context.User</MudTd>
                            </RowTemplate>
                        </MudTable>
                    </MudPaper>
                </MudItem>
            }
        </MudGrid>
    </MudPaper>
</MudContainer>

@code {
    // An overview of all the records of Formula Dream TL1
    private static readonly Dictionary<string, LegacySimData[]> legacyRecordsData = new()
        {
            {
                "Wins",
                new[]
                {
                    new LegacySimData(1, "Filip van der Bergh", Country.NL, 38, "Sokje"),
                    new LegacySimData(2, "Buzz Hahn", Country.ZA, 36, "Haan"),
                    new LegacySimData(3, "Frankku Piirrellä", Country.FI, 31, "Frank"),
                    new LegacySimData(4, "Barack Yobama", Country.FM, 22),
                    new LegacySimData(5, "Lorente Abacchio", Country.HR, 22),
                    new LegacySimData(6, "Niina Jalasjärvi", Country.FI, 22, "Dezent"),
                    new LegacySimData(7, "Joshua Thomas", Country.GB, 20, "Yoshi"),
                    new LegacySimData(8, "Christian Grün", Country.DE, 18, "Rex"),
                    new LegacySimData(9, "Aalp Aca", Country.PT, 18, "Aalp"),
                    new LegacySimData(10, "Damian Sdzuj", Country.PL, 18, "Damian"),
                }
            },
            {
                "Championships",
                new[]
                {
                    new LegacySimData(1, "Filip van der Bergh", Country.NL, 2, "Sokje"),
                    new LegacySimData(2, "Niina Jalasjärvi", Country.FI, 2, "Dezent"),
                    new LegacySimData(3, "Conc REEEEEE", Country.ID, 1, "Conc"),
                    new LegacySimData(4, "[REDACTED]", Country.FM, 1, "?"),
                    new LegacySimData(5, "Damian Sdzuj", Country.PL, 1, "Damian"),
                    new LegacySimData(6, "Scott Andretti", Country.US, 1),
                    new LegacySimData(7, "Karel Trommel", Country.NL, 1),
                    new LegacySimData(8, "Ameros Doosenvelt", Country.BG, 1, "Ameros"),
                    new LegacySimData(9, "Joshua Thomas", Country.GN, 1, "Yoshi"),
                    new LegacySimData(10, "Manuel Fangio", Country.AR, 1),
                }
            },
            {
                "Podiums",
                new[]
                {
                    new LegacySimData(1, "Filip van der Bergh", Country.NL, 113, "Sokje"),
                    new LegacySimData(2, "Buzz Hahn", Country.ZA, 85, "Haan"),
                    new LegacySimData(3, "Joshua Thomas", Country.GB, 84, "Yoshi"),
                    new LegacySimData(4, "Frankku Piirrellä", Country.FI, 79, "Frank"),
                    new LegacySimData(5, "Niina Jalasjärvi", Country.FI, 60, "Dezent"),
                    new LegacySimData(6, "Barack Yobama", Country.FM, 59),
                    new LegacySimData(7, "Christian Grün", Country.DE, 59, "Rex"),
                    new LegacySimData(8, "Manuel Cesar", Country.BR, 58, "Cesar"),
                    new LegacySimData(9, "Aalp Aca", Country.PT, 55, "Aalp"),
                    new LegacySimData(10, "Cody Claven", Country.US, 54, "Cody"),
                }
            },
            {
                "Starts",
                new[]
                {
                    new LegacySimData(1, "Filip van der Bergh", Country.NL, 549, "Sokje"),
                    new LegacySimData(1, "Aalp Aca", Country.PT, 549, "Aalp"),
                    new LegacySimData(3, "Buzz Hahn", Country.ZA, 526, "Haan"),
                    new LegacySimData(4, "Lorente Abacchio", Country.HR, 469),
                    new LegacySimData(5, "Barack Yobama", Country.GM, 443),
                    new LegacySimData(6, "Manuel Cesar", Country.BR, 375, "Cesar"),
                    new LegacySimData(7, "Cody Claven", Country.US, 360, "Cody"),
                    new LegacySimData(8, "Joshua Thomas", Country.GB, 358, "Yoshi"),
                    new LegacySimData(9, "Asahi Kawamura", Country.JP, 341),
                    new LegacySimData(10, "Drake Walker", Country.GB, 339),
                }
            },
            {
                "Retirements",
                new[]
                {
                    new LegacySimData(1, "James Fisneck III", Country.US, 45, "Pleet"),
                    new LegacySimData(2, "Sebastian Trey", Country.CH, 43),
                    new LegacySimData(3, "Patrick Lakeside", Country.IE, 38, "Merc"),
                    new LegacySimData(4, "Ruslan Davydenko", Country.QA, 35, "Apple"),
                    new LegacySimData(5, "Chris Beckham", Country.GB, 32),
                    new LegacySimData(6, "Selma Munoz", Country.CO, 32),
                    new LegacySimData(7, "Ananda Adyan", Country.ID, 30, "Conc"),
                    new LegacySimData(8, "Frank Duhdel", Country.NL, 30, "Frank"),
                    new LegacySimData(9, "Ignazio Venturi", Country.IT, 30),
                    new LegacySimData(10, "Jeff Belgium", Country.BE, 29),
                }
            },
            {
                "Poles",
                new[]
                {
                    new LegacySimData(1, "Filip van der Bergh", Country.NL, 60, "Lolsokje"),
                    new LegacySimData(2, "Buzz Hahn", Country.ZA, 30, "Haan"),
                    new LegacySimData(3, "Christian Grün", Country.DE, 30, "Rex"),
                    new LegacySimData(4, "Aalp Aca", Country.PT, 25, "Aalp"),
                    new LegacySimData(5, "Joshua Thomas", Country.GB, 24, "Yoshi"),
                    new LegacySimData(6, "Frankku Piirrellä", Country.FI, 24, "Frank"),
                    new LegacySimData(7, "Barack Yobama", Country.FM, 21),
                    new LegacySimData(8, "Cody Claven", Country.US, 21, "Cody"),
                    new LegacySimData(9, "Johannes Holst", Country.NO, 21, "Vennez"),
                    new LegacySimData(10, "Lorente Abacchio", Country.HR, 19),
                }
            },
        };

    protected override void OnInitialized()
    {
        _bread.SetBreadcrumbs(new List<BreadcrumbItem>()
        {
            new BreadcrumbItem("Home", href: ""),
            new BreadcrumbItem("Legacy", href: "legacy", disabled: true),
        });
    }

    internal class LegacySimData
    {
        public LegacySimData(int rank, string name, Country country, int value, string? user = null)
        {
            Rank = rank;
            Name = name;
            Country = country;
            Value = value;
            User = user ?? "AI";
        }

        public int Rank { get; set; }
        public string Name { get; set; }
        public Country Country { get; set; }
        public double Value { get; set; }
        public string User { get; set; }
    }
}
