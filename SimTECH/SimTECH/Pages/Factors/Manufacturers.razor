@page "/manufacturers"
@layout FactorLayout

@inject ManufacturerService ManufacturerService
@inject IDialogService DialogService

<PageTitle>Manufacturers</PageTitle>

<MudContainer>
    <MudPaper Class="d-flex justify-space-between pa-2 mx-2 my-2">
        <MudText Typo="Typo.h4">Tyre manufacturers</MudText>
        <MudButton Variant="Variant.Text" Color="Color.Success" OnClick="AddManufacturer">New</MudButton>
    </MudPaper>
    <MudDataGrid T="Manufacturer" Items="@ManufacturerNames" EditMode="DataGridEditMode.Cell" CommittedItemChanges="ModifyManufacturer" Bordered="true" Dense="true" EditTrigger="DataGridEditTrigger.Manual">
        <Columns>
            <Column T="Manufacturer" Field="Name" CellStyleFunc="_applyColouring" />
            <Column T="Manufacturer" Field="State" />
            <Column T="Manufacturer" Field="Pace" />
            <Column T="Manufacturer" Field="WearMax" />
            <Column T="Manufacturer" Field="WearMin" />
            <Column T="Manufacturer" CellClass="d-flex justify-end">
                <CellTemplate>
                    <MudButtonGroup>
                        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="@context.Actions.StartEditingItem" />
                    </MudButtonGroup>
                </CellTemplate>
            </Column>
        </Columns>
        <PagerContent>
            <MudDataGridPager T="Manufacturer" />
        </PagerContent>
    </MudDataGrid>
</MudContainer>

@code {
    private List<Manufacturer> ManufacturerNames = new();

    protected override async Task OnInitializedAsync()
    {
        ManufacturerNames = await ManufacturerService.GetManufacturers();
    }

    private Func<Manufacturer, string> _applyColouring => e =>
    {
        return $"background-color: {e.Colour}; color: {e.Accent}";
    };

    void ModifyManufacturer(Manufacturer item)
    {
        // TODO: Store edited values
    }

    async Task AddManufacturer()
    {
        var dialog = await DialogService.ShowAsync<ManufacturerEditor>("Create a new manufacturer");
        var result = await dialog.Result;

        if (!result.Canceled && result.Data != null && result.Data is Manufacturer newManufacturer)
        {
            //ManufacturerNames.Add(newManufacturer);
        }
    }
}
