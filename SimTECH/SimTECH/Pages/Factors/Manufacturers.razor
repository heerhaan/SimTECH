@page "/manufacturers"
@inject BreadcrumbProvider _bread
@inject ManufacturerService ManufacturerService
@inject IDialogService DialogService

<PageTitle>Manufacturers</PageTitle>

<MudContainer Class="mt-4">
    <MudPaper MinHeight="60px">
        <MudStack Row="true" AlignItems="AlignItems.Center" Class="pa-4">
            <MudText Typo="Typo.h3">Tyre suppliers</MudText>
            <MudSpacer />
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" OnClick="AddItem">New</MudButton>
        </MudStack>
        <MudText Color="Color.Info">These values do not apply when using wet tyres.</MudText>
    </MudPaper>
    <MudTable Items="@ManufacturerData" Bordered="true" Dense="true">
        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh>Life Bonus</MudTh>
            <MudTh>Wear</MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>
                <SupplierDisplay Colour="@context.Colour" Accent="@context.Accent">@context.Name</SupplierDisplay>
            </MudTd>
            <MudTd>
                <MudText Typo="Typo.caption">@context.Pace</MudText>
            </MudTd>
            <MudTd>
                <MudStack Row="true" Spacing="1" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
                    <MudText Typo="Typo.caption">@context.WearMin</MudText>
                    <MudIcon Size="Size.Small" Icon="@IconCollection.ArrowMoveHorizontal" />
                    <MudText Typo="Typo.caption">@context.WearMax</MudText>
                </MudStack>
            </MudTd>
            <MudTd>
                <MudButtonGroup Size="@Size.Small">
                    <MudIconButton Icon="@Icons.Material.Outlined.Edit"
                                   OnClick="@(async () => await UpdateItem(context))" />
                    <MudIconButton Icon="@Icons.Material.Outlined.Delete"
                                   Color="Color.Error"
                                   OnClick="@(async () => await DeleteItem(context))" />
                </MudButtonGroup>
            </MudTd>
        </RowTemplate>
    </MudTable>
</MudContainer>

@code {
    private List<Manufacturer> ManufacturerData = new();

    protected override async Task OnInitializedAsync()
    {
        _bread.SetBreadcrumbs(new List<BreadcrumbItem>()
        {
            new BreadcrumbItem("Home", href: "/"),
            new BreadcrumbItem("Manufacturers", href: "manufacturers", disabled: true),
        });

        ManufacturerData = await ManufacturerService.GetManufacturers();
    }

    async Task AddItem() => await UpdateItem(null);
    async Task UpdateItem(Manufacturer? item)
    {
        var parameters = new DialogParameters { ["Manufacturer"] = item };

        var dialog = await DialogService.ShowAsync<ManufacturerEditor>("Modify manufacturer", parameters);
        var result = await dialog.Result;

        if (!result.Canceled && result.Data != null && result.Data is Manufacturer updatedItem)
        {
            await ManufacturerService.UpdateManufacturer(updatedItem);
            ManufacturerData = await ManufacturerService.GetManufacturers();
        }
    }

    async Task DeleteItem(Manufacturer manufacturer)
    {
        await ManufacturerService.DeleteManufacturer(manufacturer);
        ManufacturerData.Remove(manufacturer);
    }
}
