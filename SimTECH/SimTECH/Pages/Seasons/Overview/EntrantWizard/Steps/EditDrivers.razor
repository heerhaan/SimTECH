<MudContainer MaxWidth="MaxWidth.Medium">
    <MudPaper Elevation="15">
        <MudText Typo="Typo.body2" Color="Color.Info">Don't worry about the order of the numbers, these fix themselves on save</MudText>
        <MudTable T="EditSeasonDriverModel"
                  Items="@Model.SeasonDrivers"
                  Hover="true"
                  Class="overflow-hider">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Number</MudTh>
                <MudTh>TeamRole</MudTh>
                <MudTh>Configuration</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">
                    <MudStack Row="true" Spacing="1" AlignItems="AlignItems.Center">
                        <MudText>@context.Driver?.FullName</MudText>
                        <MudSpacer />
                        <CountryFlag Code="@context.Driver?.Country" Size="ElementSize.Small" />
                    </MudStack>
                </MudTd>
                <MudTd DataLabel="Number">
                    <MudNumericField @bind-Value="@context.Number" Validation="@_numberValidation" />
                </MudTd>
                <MudTd DataLabel="TeamRole">
                    <MudSelect T="TeamRole" @bind-Value="@context.TeamRole">
                        @foreach (var select in TeamRoleEnumHelper.GetTeamRoleSelection)
                        {
                            <MudSelectItem Value="select.Key">@select.Value</MudSelectItem>
                        }
                    </MudSelect>
                </MudTd>
                <MudTd>
                    @if (context.PastSetups?.Count > 0)
                    {
                        <MudSelectExtended T="PreviousEntrantSetup<SeasonDriver>"
                                           ItemCollection="@context.PastSetups"
                                           Label="Past configuration of driver"
                                           Variant="Variant.Outlined"
                                           ValueChanged="@((PreviousEntrantSetup<SeasonDriver> setup) => OnSelectedPastSetup(context, setup))"
                                           ToStringFunc="@_previousToString">
                            <ItemTemplate Context="setup">
                                <div class="select-detail-block">
                                    <MudText Typo="Typo.subtitle1">@setup.Value.LeagueName - @setup.Value.SeasonYear</MudText>
                                    <div class="select-detail-configured">
                                        <span>NO: @setup.Value.Entrant.Number</span>
                                        <span>SKL: @setup.Value.Entrant.Skill</span>
                                        <span>REL: @setup.Value.Entrant.Reliability</span>
                                        <span>ATT: @setup.Value.Entrant.Attack</span>
                                        <span>DEF: @setup.Value.Entrant.Defense</span>
                                    </div>
                                </div>
                            </ItemTemplate>
                        </MudSelectExtended>
                    }
                    else
                    {
                        <MudText>Unexperienced bloke lol</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </MudPaper>
</MudContainer>

@code {
    [CascadingParameter]
    public AddEntrantsModel Model { get; set; }

    private Func<int, string?> _numberValidation => number =>
    {
        if (Model.SeasonDrivers.Any(e => e.Number == number))
            return $"Number {number} is already in use, pick something else pl0x.";

        return null;
    };

    private Func<PreviousEntrantSetup<SeasonDriver>, string> _previousToString => setup =>
    {
        if (setup == null)
            return "Select the league and year to take the configuration from";

        return $"{setup.LeagueName} - {setup.SeasonYear}";
    };

    private void OnSelectedPastSetup(EditSeasonDriverModel driver, PreviousEntrantSetup<SeasonDriver> setup)
    {
        driver.Skill = setup.Entrant.Skill;
        driver.Reliability = setup.Entrant.Reliability;
        driver.Attack = setup.Entrant.Attack;
        driver.Defense = setup.Entrant.Defense;

        // Team assignment happens in a following step
        // Maybe assign number dependant on whether personal numbers are allowed?
    }

    // OBSOLETE: Yoinked below out of the editing template since fuck the editing template
    /*<RowEditingTemplate>
                <MudTd DataLabel="Name">
                    <MudStack Row="true" Spacing="1" AlignItems="AlignItems.Center">
                        <MudText>@context.Driver?.FullName</MudText>
                        <MudSpacer />
                        <CountryFlag Code="@context.Driver?.Country" Size="ElementSize.Small" />
                </MudStack>
                </MudTd>
                <MudTd DataLabel="Number">
                    <MudNumericField @bind-Value="@context.Number" />
                </MudTd>
                <MudTd DataLabel="TeamRole">
                    <MudSelect T="TeamRole" @bind-Value="@context.TeamRole">
                        @foreach (var select in TeamRoleEnumHelper.GetTeamRoleSelection)
                            {
                            <MudSelectItem Value="select.Key">@select.Value</MudSelectItem>
                    }
                </MudSelect>
                </MudTd>
                    <MudTd>
                    @if (context.PastSetups?.Count > 0)
                        {
                        <MudSelectExtended T="PreviousEntrantSetup<SeasonDriver>"
                                           ItemCollection="@context.PastSetups"
                                           Label="Past configuration of driver"
                                           Variant="Variant.Outlined"
                                           ValueChanged="@((PreviousEntrantSetup<SeasonDriver> setup) => OnSelectedPastSetup(context, setup))"
                                           ToStringFunc="@_previousToString">
                            <ItemTemplate Context="setup">
                                <div class="select-detail-block">
                                    <MudText Typo="Typo.subtitle1">@setup.Value.LeagueName - @setup.Value.SeasonYear</MudText>
                                    <div class="select-detail-configured">
                                        <span>NO: @setup.Value.Entrant.Number</span>
                                        <span>SKL: @setup.Value.Entrant.Skill</span>
                                        <span>REL: @setup.Value.Entrant.Reliability</span>
                                        <span>ATT: @setup.Value.Entrant.Attack</span>
                                        <span>DEF: @setup.Value.Entrant.Defense</span>
                                </div>
                            </div>
                        </ItemTemplate>
                        </MudSelectExtended>
                    }
                    else
                        {
                        <MudText>No past configs</MudText>
                }
            </MudTd>
            </RowEditingTemplate>
            <EditButtonContent Context="button">
                <MudIconButton Size="Size.Small"
                               Icon="@Icons.Material.Outlined.Edit"
                               Class="pa-0"
                               OnClick="@button.ButtonAction" />
            </EditButtonContent>*/
}
