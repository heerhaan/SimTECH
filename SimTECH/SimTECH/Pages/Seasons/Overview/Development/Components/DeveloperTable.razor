<MudTable Items="@DevelopedEntrants"
          Dense="true"
          Class="extra-dense"
          id="development-results">
    <ToolBarContent>
        @ChildContent
    </ToolBarContent>
    <HeaderContent>
        <MudTh>
            <MudTableSortLabel T="DevelopedEntrant" SortBy="@(e => e.Name)" InitialDirection="SortDirection.Ascending">
                Name
            </MudTableSortLabel>
        </MudTh>
        @if (DevelopModel.IsOptionalColumnVisible)
        {
            <MudTh>
                <MudTableSortLabel T="DevelopedEntrant" SortBy="@(e => e.Optional)">
                    Age
                </MudTableSortLabel>
            </MudTh>
        }
        <MudTh Class="number-col-lg">
            <MudTableSortLabel T="DevelopedEntrant" SortBy="@(e => e.Old)">
                Old
            </MudTableSortLabel>
        </MudTh>
        <MudTh Class="number-col-lg">
            <MudTableSortLabel T="DevelopedEntrant" SortBy="@(e => e.Change)">
                Change
            </MudTableSortLabel>
        </MudTh>
        <MudTh Class="number-col-lg">
            <MudTableSortLabel T="DevelopedEntrant" SortBy="@(e => e.New)">
                New
            </MudTableSortLabel>
        </MudTh>
        <MudTh Style="width: 150px">Range</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>
            <MudStack Row="true" AlignItems="AlignItems.Center" Class="pa-0">
                <MudText Class="overflow-hider" Style="@(context.Mark ? "text-decoration: underline" : "")">
                    @context.Name
                </MudText>
                @if (context.Nationality.HasValue)
                {
                    <MudSpacer />
                    <CountryFlag Code="@context.Nationality.Value" Size="ElementSize.Small" />
                }
            </MudStack>
        </MudTd>
        @if (DevelopModel.IsOptionalColumnVisible)
        {
            <MudTd>
                <MudText Typo="Typo.caption">@context.Optional</MudText>
            </MudTd>
        }
        <MudTd Class="number-col-lg">
            <MudText Typo="Typo.caption">@context.Old</MudText>
        </MudTd>
        <MudTd Class="number-col-lg">
            <GradientColour Min="@DevelopModel.MinChange" Max="@DevelopModel.MaxChange" Value="@context.Change">
                <MudText Typo="Typo.caption">@context.Change</MudText>
            </GradientColour>
        </MudTd>
        <MudTd Class="number-col-lg">
            <MudText Typo="Typo.caption">@context.New</MudText>
        </MudTd>
        <MudTd>
            <MudStack Row="true" Class="pa-0 flex-nowrap">
                <MudNumericField T="int"
                                 @bind-Value="@context.Min"
                                 ReadOnly="@DevelopModel.IsDirectRangeReadOnly"
                                 Class="field-xs dense-field" />
                <MudNumericField T="int"
                                 @bind-Value="@context.Max"
                                 ReadOnly="@DevelopModel.IsDirectRangeReadOnly"
                                 Class="field-xs dense-field" />
            </MudStack>
        </MudTd>
    </RowTemplate>
</MudTable>

@code {
    [CascadingParameter]
    public DevelopModel DevelopModel { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public List<DevelopedEntrant> DevelopedEntrants { get; set; }
}
