<MudDialog>
    <DialogContent>
        <MudContainer>
            <MudStack Row="true" AlignItems="AlignItems.Center" Class="px-0 pb-2">
                <MudText Typo="Typo.h5" Color="Color.Secondary">Qualifying battles</MudText>
                <MudSpacer />
                <MudButtonGroup Variant="Variant.Text" Color="Color.Secondary">
                    <ScreenshotButton TargetId="qualy-battles-table" IsIconButton="true" />
                    <MudIconButton Icon="@Icons.Material.Filled.Close" OnClick="@(() => StatDialog?.Close())" />
                </MudButtonGroup>
            </MudStack>
            <MudPaper Class="px-2">
                <MudTable T="QualyBattle"
                          Items="@QualyBattleItems.OrderBy(e => e.TeamName)"
                          GroupBy="@groupDefinition"
                          GroupHeaderStyle="background-color:var(--mud-palette-background-grey)"
                          FixedHeader="true"
                          Dense="true"
                          Class="extra=dense"
                          id="qualy-battles-table">
                    <HeaderContent>
                        <MudTh Class="accent-cell"></MudTh>
                        <MudTh>Name</MudTh>
                        <MudTh Class="number-col">NO</MudTh>
                        <MudTh>Dub</MudTh>
                    </HeaderContent>
                    <GroupHeaderTemplate>
                        <MudTh Class="mud-table-cell-custom-group" colspan="10">
                            @if (context.Key is SeasonTeam teamObj)
                            {
                                <MudStack Row="true" Spacing="1" AlignItems="AlignItems.Center" Class="pa-0">
                                    <MudText>@teamObj.Name</MudText>
                                    <MudSpacer />
                                    <CountryFlag Code="@teamObj.Team.Country" Size="ElementSize.Small" />
                                </MudStack>
                            }
                        </MudTh>
                    </GroupHeaderTemplate>
                    <RowTemplate>
                        <MudTd Class="accent-cell">
                            <SmolAccent Colour="@context.Colour" />
                        </MudTd>
                        <MudTd>
                            <MudStack Row="true" Spacing="1" AlignItems="AlignItems.Center" Class="pa-0">
                                <MudText>@context.Name</MudText>
                                <MudSpacer></MudSpacer>
                                <CountryFlag Code="@context.Country" Size="ElementSize.Small" />
                            </MudStack>
                        </MudTd>
                        <MudTd Class="number-col">
                            <NumberDisplay Colour="@context.Colour" Accent="@context.Accent">@context.Number</NumberDisplay>
                        </MudTd>
                        <MudTd Class="number-col">
                            <MudText Typo="Typo.caption">@context.VictoryCount</MudText>
                        </MudTd>
                    </RowTemplate>
                </MudTable>
            </MudPaper>
        </MudContainer>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter] protected MudDialogInstance? StatDialog { get; set; }

    [Parameter] public IEnumerable<SeasonDriver> SeasonDrivers { get; set; } = Enumerable.Empty<SeasonDriver>();
    [Parameter] public IEnumerable<SeasonTeam> SeasonTeams { get; set; } = Enumerable.Empty<SeasonTeam>();
    [Parameter] public IEnumerable<Result> Results { get; set; } = Enumerable.Empty<Result>();

    private List<QualyBattle> QualyBattleItems { get; set; } = new();

    private TableGroupDefinition<QualyBattle> groupDefinition = new()
    {
        GroupName = "Team",
        Selector = e => e.Team
    };

    protected override void OnInitialized()
    {
        // Iterate through all the results of a team
        foreach (var teamResults in Results.GroupBy(e => e.SeasonTeamId))
        {
            var team = SeasonTeams.First(e => e.Id == teamResults.Key);

            var driverVictories = new Dictionary<long, int>();

            // Iterate through the results of a team per race
            foreach (var raceResults in teamResults.GroupBy(e => e.RaceId).Where(e => e.Any()))
            {
                var highestPlaced = raceResults.MinBy(e => e.Grid);

                if (highestPlaced == null)
                    continue;

                if (driverVictories.ContainsKey(highestPlaced.SeasonDriverId))
                    driverVictories[highestPlaced.SeasonDriverId]++;
                else
                    driverVictories.Add(highestPlaced.SeasonDriverId, 1);
            }

            foreach (var victory in driverVictories)
            {
                var driver = SeasonDrivers.First(e => e.Id == victory.Key);

                QualyBattleItems.Add(new QualyBattle
                {
                    Name = driver.Driver.FullName,
                    Number = driver.Number,
                    Country = driver.Driver.Country,
                    VictoryCount = victory.Value,

                    TeamId = team.Id,
                    TeamName = team.Name,
                    Colour = team.Colour,
                    Accent = team.Accent,

                    Team = team
                });
            }
        }
    }
}
