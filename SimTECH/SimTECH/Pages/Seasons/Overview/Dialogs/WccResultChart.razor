@using SimTECH.PageModels.Stats

<MudDialog>
    <DialogContent>
        <MudPaper MinHeight="900px" MinWidth="1400px" Class="pa-2" id="wcc-chart-container">
            <MudStack Row="true" AlignItems="AlignItems.Center">
                <MudIcon Icon="@Icons.Material.Filled.SsidChart" Color="Color.Secondary" />
                <MudText Typo="Typo.h5" Color="Color.Secondary">Constructors championship points progression</MudText>
                <MudSpacer />
                <MudButtonGroup Variant="Variant.Text" Color="Color.Secondary">
                    <ScreenshotButton TargetId="wcc-chart-container" IsIconButton="true" />
                    <MudIconButton Icon="@Icons.Material.Filled.Close" OnClick="@(() => ChartDialog?.Close())" />
                </MudButtonGroup>
            </MudStack>
            @if (!loading)
            {
                <ApexCharts.ApexChart TItem="DataPoint" Title="WCC Chart" Options="@options" Width="1400">
                    @foreach (var result in DataSets)
                    {
                        <ApexCharts.ApexPointSeries TItem="DataPoint"
                                                    Items="@result.DataPoints"
                                                    Name="@result.Label"
                                                    SeriesType="ApexCharts.SeriesType.Line"
                                                    XValue="@(e => e.XData)"
                                                    YValue="@(e => e.YData)"
                                                    OrderBy="e => e.X"
                                                    Stroke="@result.Stroke" />
                    }
                </ApexCharts.ApexChart>
            }
        </MudPaper>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter] protected MudDialogInstance? ChartDialog { get; set; }

    [Parameter] public List<StandingTeamModel>? Teams { get; set; }
    [Parameter] public Season Season { get; set; }

    ApexCharts.ApexChartOptions<DataPoint> options;
    List<ChartData> DataSets = new();

    bool loading = true;

    protected override void OnInitialized()
    {
        options = Globals.CreateDefaultChartOptions;

        var allotments = Season.PointAllotments?.ToDictionary(e => e.Position, e => e.Points) ?? new Dictionary<int, int>();

        if (Teams != null)
        {
            foreach (var team in Teams)
            {
                var dataSet = new ChartData { Label = team.Name };
                var points = 0;

                foreach (var result in team.ResultCells.GroupBy(e => e.Round))
                {
                    foreach (var teamDriverResult in result)
                    {
                        if (allotments.TryGetValue(teamDriverResult.Position, out int allotedPoints))
                            points += allotedPoints;

                        if (teamDriverResult.Pole)
                            points += Season.PointsPole;

                        if (teamDriverResult.FL)
                           points += Season.PointsFastestLap;
                    }

                    dataSet.DataPoints.Add(new DataPoint(result.Key, points));
                }

                dataSet.Stroke = new ApexCharts.SeriesStroke { Color = team.Colour, Width = 3 };

                DataSets.Add(dataSet);
            }

            loading = false;
        }
    }
}
