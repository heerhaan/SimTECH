<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h5">Incident editor</MudText>
    </TitleContent>
    <DialogContent>
        <MudStack>
            <MudTextField T="string" @bind-Text="Model.Name" Label="Name" />

            <div>
                <MudText Typo="Typo.subtitle2">Category</MudText>
                @if (Model.Id == 0)
                {
                    <MudChipSet @bind-SelectedChip="categoryChip" Mandatory="true">
                        @foreach (var cat in IncidentCategoryEnumHelper.GetIncidentCategories)
                        {
                            <MudChip Value="@cat.Key">@cat.Value</MudChip>
                        }
                    </MudChipSet>
                }
                else
                {
                    <MudText>@Model.Category.ToString()</MudText>
                }
            </div>

            <MudColorPicker @bind-Text="Model.Colour" Label="Colour" Placeholder="Select colour" Class="field-md" />

            <MudNumericField T="int" @bind-Value="Model.Odds"
                             Min="0"
                             Label="Odds" />

            <MudSwitchM3 @bind-Value="Model.Penalized"
                         Label="Is penalized"
                         Color="Color.Secondary"
                         ThumbIcon="@Icons.Material.Filled.Done"
                         ThumbOffIcon="@Icons.Material.Filled.Close" />

            @if (Model.Penalized)
            {
                <MudNumericField T="int" @bind-Value="Model.Limit"
                                 Min="0"
                                 Label="Limit" />

                <MudNumericField T="int" @bind-Value="Model.Punishment"
                                 Min="1"
                                 Label="Punishment" />
            }
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] protected MudDialogInstance? EditDialog { get; set; }
    [Parameter] public Incident? Incident { get; set; }

    MudChip? categoryChip;

    EditIncident Model;

    protected override void OnInitialized()
    {
        Model = new EditIncident(Incident);
    }

    private void Submit()
    {
        if (Model.Id == 0)
        {
            // Perhaps own warning/validation message
            if (categoryChip == null)
                return;

            Model.Category = (IncidentCategory)categoryChip.Value;
        }

        if (!Model.Penalized)
        {
            Model.Limit = 0;
            Model.Punishment = 0;
        }

        if (Model.IsDirty)
        {
            EditDialog?.Close(DialogResult.Ok(Model.Record));
        }
    }

    private void Cancel() => EditDialog?.Cancel();
}
