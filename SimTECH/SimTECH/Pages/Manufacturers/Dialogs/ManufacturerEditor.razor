<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h5" Color="Color.Secondary">Tyre supplier editor</MudText>
        <MudText Typo="Typo.body2">
            Hint 1: Wear is subtracted from the remaining life of the tyre, thus a positive number correlates to more wear.
            <br/>
            Hint 2: Life Bonus is added to the total pace of the currently fitted tyre.
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField T="string" @bind-Value="Model.Name" Label="Name" Class="field-md" />

        <MudStack Row="true" Spacing="4">
            <MudColorPicker @bind-Text="Model.Colour" Label="Colour" Placeholder="Select colour" />
            <MudColorPicker @bind-Text="Model.Accent" Label="Accent" Placeholder="Select accent" />
        </MudStack>

        <MudNumericField T="int" @bind-Value="Model.Pace" Label="Life Bonus" Class="field-sm" />

        <MudStack Row="true" Spacing="4">
            <MudNumericField T="int" @bind-Value="Model.WearMin" Label="Minimum wear" />
            <MudNumericField T="int" @bind-Value="Model.WearMax" Label="Maximum wear" />
        </MudStack>

        <PreviewColourMix Colour="@Model.Colour" Accent="@Model.Accent" Text="@Model.Name" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] protected MudDialogInstance? EditDialog { get; set; }

    [Parameter] public Manufacturer? Manufacturer { get; set; }

    private EditManufacturerModel Model { get; set; }

    protected override void OnInitialized()
    {
        Model = new EditManufacturerModel(Manufacturer);
    }

    private void Submit()
    {
        if (Model.IsDirty)
        {
            EditDialog?.Close(DialogResult.Ok(Model.Record));
        }
    }

    private void Cancel() => EditDialog?.Cancel();
}
