@page "/"
@inject BreadcrumbProvider _bread
@inject RaceService _raceService
@inject SeasonService _seasonService
@inject ProtectedLocalStorage _localStorage
@inject NavigationManager _nav
@inject IOptions<SimConfig> _config

<PageTitle>Home</PageTitle>

<MudContainer MaxWidth="MaxWidth.False" Class="mt-16 px-8">
    <MudGrid>
        <MudItem xs="12">
            <MudPaper Elevation="15" Height="75px" Class="d-flex flex-column justify-center align-center pa-4">
                <MudText Typo="Typo.h3">SimTECH</MudText>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="5" MinHeight="100px" Class="pa-4">

            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="5" MinHeight="100px" Class="pa-4">

            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="12" md="4">
            <MudPaper Elevation="5" MinHeight="100px" Class="pa-4">

            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudPaper Elevation="5" Class="pa-4 mud-height-full">
                <MudTable id="recent-race-table" Items="@recentRaces" Dense="true">
                    <ToolBarContent>
                        <MudText Typo="Typo.h5">Last races</MudText>
                        <MudSpacer />
                        <ScreenshotButton TargetId="recent-race-table" />
                    </ToolBarContent>
                    <HeaderContent>
                        <MudTh>League</MudTh>
                        <MudTh>Race</MudTh>
                        <MudTh Class="pa-0"></MudTh>
                        <MudTh>Team</MudTh>
                        <MudTh Class="number-col">No.</MudTh>
                        <MudTh>Driver</MudTh>
                        <MudTh></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd>
                            <MudText Typo="Typo.body2">@context.LeagueName</MudText>
                        </MudTd>
                        <MudTd>
                            <MudStack Row="true" Spacing="1" AlignItems="AlignItems.Center">
                                <MudText Typo="Typo.body2">
                                    [R@(context.Round)] @(context.Name)
                                </MudText>
                                <MudSpacer />
                                <CountryFlag Code="@context.Country" Size="FlagSize.Tiny" />
                            </MudStack>
                        </MudTd>
                        <MudTd Class="pa-0">
                            <span class="smol-accent" style="@(ViewHelper.SetBackgroundColour(context.WinningDriver.Colour))"></span>
                        </MudTd>
                        <MudTd>
                            <MudStack Row="true" Spacing="1" AlignItems="AlignItems.Center">
                                <MudText Typo="Typo.body2">@context.WinningTeam.Name</MudText>
                            </MudStack>
                        </MudTd>
                        <MudTd Class="number-col" Style="@(ViewHelper.SetFullColourstyle(context.WinningDriver.Colour, context.WinningDriver.Accent))">
                            <MudText Typo="Typo.caption">@context.WinningDriver.Number</MudText>
                        </MudTd>
                        <MudTd>
                            <MudStack Row="true" Spacing="1" AlignItems="AlignItems.Center">
                                <MudText Typo="Typo.body2">@context.WinningDriver.Name</MudText>
                            </MudStack>
                        </MudTd>
                        <MudTd>
                            <MudButton Variant="Variant.Text" Color="Color.Secondary" OnClick="@(() => GoToPostRace(context.RaceId))">Go</MudButton>
                        </MudTd>
                    </RowTemplate>
                </MudTable>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudPaper Elevation="5" Class="pa-4 mud-height-full">
                <MudTable T="Race" Items="@upcomingRaces" Dense="true">
                    <ToolBarContent>
                        <MudText Typo="Typo.h5">Upcoming races</MudText>
                    </ToolBarContent>
                    <HeaderContent>
                        <MudTh>Round</MudTh>
                        <MudTh>Name</MudTh>
                        <MudTh></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd>R: @(context.Round)</MudTd>
                        <MudTd>@(context.Name)</MudTd>
                        <MudTd>
                            <MudButton Variant="Variant.Text" Color="Color.Secondary" OnClick="@(() => GoToRaceWeek(context.Id))">Go</MudButton>
                        </MudTd>
                    </RowTemplate>
                </MudTable>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    List<FinishedRaceModel> recentRaces;
    List<Race> upcomingRaces = new();
    int raceAmount = 5;

    protected override async Task OnInitializedAsync()
    {
        _bread.SetBreadcrumbs(new List<BreadcrumbItem>()
        {
            new BreadcrumbItem("Home", href: "/", disabled: true),
        });

        // following is possibly a very unoptimized call
        recentRaces = await _raceService.GetRecentlyFinishedCalendarRaces(raceAmount);
        recentRaces.Reverse();

        await RetrieveUpcomingRaces();
    }

    private async Task RetrieveUpcomingRaces()
    {
        var seasons = await _seasonService.GetSeasons(StateFilter.Active);
        foreach (var season in seasons)
        {
            var upcomingRace = await _raceService.GetNextRaceOfSeason(season.Id);
            if (upcomingRace != null)
                upcomingRaces.Add(upcomingRace);
        }
    }

    private void GoToPostRace(long raceId) => _nav.NavigateTo($"/postrace/{raceId}");
    private void GoToRaceWeek(long raceId) => _nav.NavigateTo($"/raceweek/{raceId}");
}
