@page "/test"
@inject BreadcrumbProvider _bread
@inject ProtectedLocalStorage _localStorage
@inject NavigationManager _nav
@inject IOptions<SimConfig> _config

<PageTitle>Test</PageTitle>

<MudContainer MaxWidth="MaxWidth.False" Class="mt-16 px-8">
    <MudGrid>
        <MudItem xs="9">
            <MudGrid>
                <MudItem xs="12" sm="6">
                    <MudPaper Elevation="2" MinHeight="300px" Class="pa-4">
                        ΩΩΩΩΩΩλλλλλλλλλλλλλλ
                        ΩΩΩΩΩΩλλλλλλλλλλλλλλ
                    </MudPaper>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudPaper Elevation="2" MinHeight="300px" Class="pa-4">
                        <MudStack Spacing="1">
                            <MudText Typo="Typo.h4">H4</MudText>
                            <MudText Typo="Typo.h6">H6</MudText>
                            <MudText Typo="Typo.subtitle1">Subtitle 1</MudText>
                            <MudText Typo="Typo.subtitle2">Subtitle 2</MudText>
                            <MudText Typo="Typo.body1">Body 1</MudText>
                            <MudText Typo="Typo.body2">Body 2</MudText>
                            <MudText Typo="Typo.overline">Overline</MudText>
                            <MudText Typo="Typo.caption">Caption</MudText>
                            <MudText Typo="Typo.button">Button</MudText>
                        </MudStack>
                    </MudPaper>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudPaper Elevation="2" MinHeight="200px" Class="pa-4">
                        <MudText Typo="Typo.h5">Examples</MudText>
                        <div>
                            <!-- Local storage value -->
                            <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="SetExample">
                                Set local stored info
                            </MudButton>
                            <MudText>@exampleStore</MudText>
                        </div>
                        <MudText Typo="Typo.overline">Custom emblems</MudText>
                        <MudStack Row="true">
                            <Emblem Icon="@IconCollection.Polygon" Colour="#49f2e7" Accent="#bf34fa" />
                        </MudStack>
                    </MudPaper>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudPaper Elevation="2" MinHeight="200px" Class="pa-4">
                        <MudSimpleTable>
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Looks rating</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        <MudText Typo="Typo.h6" Style="@(ViewHelper.SetTextNumberStyle("red", "yellow"))">01</MudText>
                                    </td>
                                    <td>3.5/5</td>
                                </tr>
                                <tr>
                                    <td>
                                        <MudText Typo="Typo.h6" Style="-webkit-text-stroke: 1px red; color:yellow">03</MudText>
                                    </td>
                                    <td>2/5</td>
                                </tr>
                                <tr>
                                    <td colspan="2">
                                        <MudStack Row="true" Spacing="0" Class="mud-width-full pa-0" Style="height:8px">
                                            <span class="py-1" style="width:25%; background-color:red"></span>
                                            <span class="py-1" style="width:25%; background-color:green"></span>
                                            <span class="py-1" style="width:25%; background-color:green"></span>
                                            <span class="py-1" style="width:25%; background-color:yellow"></span>
                                        </MudStack>
                                    </td>
                                </tr>
                            </tbody>
                        </MudSimpleTable>
                    </MudPaper>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudPaper>
                        <MudText Typo="Typo.h1">Header1</MudText>
                        <MudText Typo="Typo.h6">Header6</MudText>
                        <MudText Typo="Typo.subtitle1">Subheader1</MudText>
                        <MudText Typo="Typo.subtitle2">Subheader2</MudText>
                        <MudText Typo="Typo.body1">Body1</MudText>
                        <MudText Typo="Typo.body2">Body2</MudText>
                        <MudText Typo="Typo.button">Button</MudText>
                        <MudText Typo="Typo.caption">Caption</MudText>
                        <MudText Typo="Typo.overline">Overline</MudText>
                    </MudPaper>
                </MudItem>
            </MudGrid>
        </MudItem>
        <MudItem xs="3">
            <MudPaper Elevation="2" MinHeight="300px" Class="pa-4">
                <MudText Typo="Typo.overline">Config</MudText>
                <MudDivider />
                <MudSimpleTable>
                    <thead>
                        <tr>
                            <th>Setting</th>
                            <th>Value</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Fatal odds</td>
                            <td>@config.FatalityChance</td>
                        </tr>
                        <tr>
                            <td>Dsq odds</td>
                            <td>@config.DisqualifyChance</td>
                        </tr>
                        <tr>
                            <td>Mistake rolls</td>
                            <td>@config.MistakeAmountRolls</td>
                        </tr>
                        <tr>
                            <td>Mistake min rng</td>
                            <td>@config.MistakeLowerValue</td>
                        </tr>
                        <tr>
                            <td>Mistake max rng</td>
                            <td>@config.MistakeUpperValue</td>
                        </tr>
                        <tr>
                            <td>Battle RNG</td>
                            <td>@config.BattleRng</td>
                        </tr>
                        <tr>
                            <td>Gap marge p/pt</td>
                            <td>@config.GapMarge</td>
                        </tr>
                        <tr>
                            <td>Team status car mod</td>
                            <td>@config.CarDriverStatusModifier</td>
                        </tr>
                        <tr>
                            <td>Use personal numbers</td>
                            <td>@config.PersonalNumbersEnabled</td>
                        </tr>
                        <tr>
                            <td>Calc distance ref</td>
                            <td>@config.CalculationDistance</td>
                        </tr>
                    </tbody>
                </MudSimpleTable>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    string activeCustomIcon = IconCollection.BrandToyota;
    string[] customIcons = IconCollection.ArrayOfIcons;
    int iconCycler = 0;
    string? exampleStore;
    string newExampleString = "Stored and retrieved from the local storage";
    SimConfig config;

    protected override void OnInitialized()
    {
        _bread.SetBreadcrumbs(new List<BreadcrumbItem>()
        {
            new BreadcrumbItem("Home", href: "/"),
        });

        config = _config.Value;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var storedExample = await _localStorage.GetAsync<string>("example");
            if (storedExample.Success)
                exampleStore = storedExample.Value;
        }
    }

    void CycleCustomIcon()
    {
        iconCycler++;
        iconCycler %= customIcons.Length;

        activeCustomIcon = customIcons[iconCycler];
    }

    private async Task SetExample()
    {
        await _localStorage.SetAsync("example", newExampleString);
    }
}
