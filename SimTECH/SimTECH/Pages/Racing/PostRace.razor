@page "/postrace/{RaceId:long}"
@inject NavigationManager _nav
@inject RaceService _raceService

<PageTitle>Post Race</PageTitle>

@if (!loading)
{
    <MudGrid>
        <MudItem xs=12>
            <MudPaper Elevation="15" Height="100px" Class="pa-4">
                <MudStack Row="true" AlignItems="AlignItems.Center">
                    <MudStack>
                        <MudText Typo="Typo.h4">Post race</MudText>
                        <MudText Typo="Typo.caption">Is there more info to show here?</MudText>
                        <MudText>Sorry this page is quite unfinished, still. You can go to the standings though with a following button</MudText>
                    </MudStack>

                    <MudSpacer />

                    <MudButton Variant="Variant.Outlined" OnClick="GoToStandings">Standings</MudButton>
                </MudStack>
            </MudPaper>
        </MudItem>

        <MudItem xs="4">
            <MudPaper Class="mud-height-full">
                <MudText>Final standings</MudText>
            </MudPaper>
        </MudItem>
        <MudItem xs="4">
            <MudCard>
                <MudCardHeader>
                    <MudText>Podium</MudText>
                </MudCardHeader>
                <MudCardContent>
                    <MudStack Row="true" Justify="Justify.SpaceBetween">
                        <MudText>P3</MudText>
                        <MudText>P1</MudText>
                        <MudText>P2</MudText>
                    </MudStack>
                </MudCardContent>
            </MudCard>
        </MudItem>
        <MudItem xs="4">
            <MudPaper Class="mud-height-full">
                <MudText>Incidents during the race</MudText>
                @if (results.Any())
                {
                    <MudSimpleTable>
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Incident</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var result in results.Where(e => e.Incident != Incident.None))
                            {
                                <tr>
                                    <td></td>
                                    <td>@result.Incident</td>
                                    <td>@result.Status</td>
                                </tr>
                            }
                        </tbody>
                    </MudSimpleTable>
                }
            </MudPaper>
        </MudItem>

        <MudItem xs="3">
            <MudPaper>
                <MudText>Placeholder</MudText>
            </MudPaper>
        </MudItem>
        <MudItem xs="6">
            <MudPaper>
                <MudStack Spacing="6">
                    <DriverGraphic FirstName="Mr." LastName="Mister" Abbreviation="MIS" Number="77"
                               Team="Racing Team" Colour="@Color.Secondary.ToString()" Position="3" />
                    <DriverGraphic FirstName="Dr." LastName="Bloke" Abbreviation="BLO" Number="33"
                               Team="Racing Team" Colour="@Color.Primary.ToString()" Position="1" />
                    <DriverGraphic FirstName="Ms." LastName="Lady" Abbreviation="LAD" Number="55"
                               Team="Racing Team" Colour="@Color.Tertiary.ToString()" Position="2" />
                </MudStack>
            </MudPaper>
        </MudItem>
        <MudItem xs="3">
            <MudPaper>
                <MudText>Placeholder</MudText>
            </MudPaper>
        </MudItem>
    </MudGrid>
}

@code {
    [Parameter] public long RaceId { get; set; }

    SimTECH.Data.Models.Race race;
    List<Result> results;

    bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        race = await _raceService.GetRaceById(RaceId);
        results = await _raceService.GetResultsOfRace(RaceId);

        loading = false;
    }

    void GoToStandings()
    {
        _nav.NavigateTo($"/overview/{race.SeasonId}/2");
    }
}
