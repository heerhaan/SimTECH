@inject DriverService DriverService

<MudDialog>
    <TitleContent>
        <MudText>
            <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3 mb-n1" />
            Add new driver
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@driver">
            <MudTextField T="string" @bind-Value="@driver.FirstName" Label="FirstName" />
            <MudTextField T="string" @bind-Value="@driver.LastName" Label="LastName" />
            <MudTextField T="string" @bind-Value="@driver.Abbreviation" Label="Abbreviation" />
            <MudDatePicker @bind-Date="@DateSetter" Label="Date of birth" />
            <MudCountrySelect @bind-Value="driver.Country" />
            <MudTextField T="string" @bind-Value="@driver.Biography" Label="Biography" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    protected MudDialogInstance? DriverDialog { get; set; }

    [Parameter]
    public Driver driver { get; set; } = new Driver();

    private DateTime? DateSetter { get; set; }

    protected override void OnInitialized()
    {
        DateSetter = driver.DateOfBirth;
    }

    private void Submit()
    {
        // TODO: Function call just adds it here, but we want to actually store it!
        driver.DateOfBirth = DateSetter.GetValueOrDefault();
        DriverService.CreateDriver(driver);

        DriverDialog?.Close(DialogResult.Ok(driver));
    }

    private void Cancel() => DriverDialog?.Cancel();
}
