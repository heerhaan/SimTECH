<MudDialog>
    <TitleContent>
        <MudText>Modify team</MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@Model">
            <MudGrid>
                <MudItem xs="8">
                    <MudPaper Elevation="15" Class="pa-4">
                        <MudStack>
                            <MudTextField T="string" @bind-Value="@Model.Name" Label="Name" Class="field-md" />
                            <CountrySelect @bind-Value="Model.Country" Class="field-md" />
                            <MudTextField T="string" @bind-Value="@Model.Biography" Label="Biography" Lines="5" />

                            <MudText Typo="Typo.subtitle1">Toggles</MudText>
                            <MudDivider />
                            <MudSwitchM3 @bind-Checked="Model.Mark"
                                         Label="Mark"
                                         Color="Color.Secondary"
                                         ThumbIcon="@Icons.Material.Filled.Done"
                                         ThumbOffIcon="@Icons.Material.Filled.Close" />
                        </MudStack>
                    </MudPaper>
                </MudItem>

                <MudItem xs="4">
                    <MudPaper Elevation="10" Class="pa-4">
                        <MudText Typo="Typo.subtitle1">Traits</MudText>
                        <MudChipSet @bind-SelectedValues="selectedTraits" MultiSelection="true" Filter="true">
                            @foreach (var trait in selectableTraits)
                            {
                                <MudChip Text="@trait.Name" Value="@trait.Id" Color="Color.Primary"></MudChip>
                            }
                        </MudChipSet>
                    </MudPaper>
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] protected MudDialogInstance? TeamDialog { get; set; }

    [Parameter] public Team? Team { get; set; }
    [Parameter] public List<Trait> Traits { get; set; } = new();

    private EditTeamModel Model;
    private List<Trait> selectableTraits;
    private ICollection<object>? selectedTraits { get; set; }

    protected override void OnInitialized()
    {
        Model = new EditTeamModel(Team);

        var teamTraitIds = Model.TeamTraits.Select(e => e.TraitId).ToList();
        selectableTraits = Traits.Where(e => e.State == State.Active || teamTraitIds.Contains(e.Id)).ToList();
        selectedTraits = Model.TeamTraits.Select(e => e.TraitId).Cast<object>().ToList();
    }

    private void Submit()
    {
        if (selectedTraits != null)
        {
            Model.TeamTraits = selectedTraits
                .Cast<long>()
                .Select(e => new EditTeamTraitModel { TeamId = Model.Id, TraitId = e })
                .ToList();
        }

        if (Model.IsDirty)
        {
            TeamDialog?.Close(DialogResult.Ok(Model.Record));
        }
    }

    private void Cancel() => TeamDialog?.Cancel();
}
