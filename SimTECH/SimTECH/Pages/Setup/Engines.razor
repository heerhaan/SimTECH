@page "/engines"
@inject EngineService EngineService
@inject IDialogService DialogService

<PageTitle>Engines</PageTitle>

<MudContainer>
    <MudTable Items="@EngineNames" Bordered="true" Class="mt-2">
        <ToolBarContent>
            <MudText Typo="Typo.h4">Engines</MudText>
            <MudSpacer />
            <MudButton Variant="Variant.Outlined" Color="Color.Tertiary" OnClick="AddEngine">New</MudButton>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh>State</MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.Name</MudTd>
            <MudTd>@context.State</MudTd>
            <MudTd Class="d-flex justify-end">
                <MudButtonGroup Size="@Size.Small">
                    <MudIconButton Icon="@Icons.Material.Outlined.Edit" OnClick="@(async () => await UpdateEngine(context))" />
                    <MudIconButton Icon="@Icons.Material.Outlined.Delete" Color="Color.Error" OnClick="@(async () => await DeleteEngine(context))" />
                </MudButtonGroup>
            </MudTd>
        </RowTemplate>
    </MudTable>
    <MudDataGrid T="Engine" Items="@EngineNames" Bordered="true" Class="my-2">
        <ToolBarContent>
            <MudText Typo="Typo.h4">Engines</MudText>
            <MudSpacer />
            <MudButton Variant="Variant.Outlined" Color="Color.Tertiary" OnClick="AddEngine">New</MudButton>
        </ToolBarContent>
        <Columns>
            <PropertyColumn Property="e => e.Name" />
            <PropertyColumn Property="e => e.State" />
            <TemplateColumn T="Engine">
                <CellTemplate>
                    <MudButtonGroup Size="@Size.Small">
                        <MudIconButton Icon="@Icons.Material.Outlined.Edit" OnClick="@(async () => await UpdateEngine(context.Item))" />
                        <MudIconButton Icon="@Icons.Material.Outlined.Delete" Color="Color.Error" OnClick="@(async () => await DeleteEngine(context.Item))" />
                    </MudButtonGroup>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
        <ChildRowContent>
            <MudPaper>
                <MudText>@context.Item.Name</MudText>
            </MudPaper>
        </ChildRowContent>
        <PagerContent>
            <MudDataGridPager T="Engine" />
        </PagerContent>
    </MudDataGrid>
</MudContainer>

@code {
    private List<Engine> EngineNames { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        EngineNames = await EngineService.GetEngines();
    }

    async Task AddEngine() => await UpdateEngine(new Engine());
    async Task UpdateEngine(Engine item)
    {
        var parameters = new DialogParameters { ["Engine"] = (item) };

        var dialog = await DialogService.ShowAsync<EngineEditor>("Modify engine", parameters);
        var result = await dialog.Result;

        if (!result.Canceled && result.Data != null && result.Data is Engine updatedItem)
        {
            await EngineService.UpdateEngine(updatedItem);
            EngineNames = await EngineService.GetEngines();
        }
    }

    async Task DeleteEngine(Engine engine)
    {
        await EngineService.DeleteEngine(engine);
        EngineNames.Remove(engine);
    }
}
