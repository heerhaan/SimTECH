@page "/traits"
@layout SetupLayout

@inject TraitService TraitService
@inject IDialogService DialogService

<PageTitle>Traits</PageTitle>

<MudContainer>
    <h2>Traits</h2>
    <MudPaper Class="d-flex align-center pa-2 mx-2 my-2">
        <MudButton Variant="Variant.Text" Color="Color.Success" OnClick="@((e) => AddTrait())">New</MudButton>
    </MudPaper>
    <MudDataGrid T="Trait" Items="TraitNames" EditMode="DataGridEditMode.Cell" CommittedItemChanges="ModifyTrait" Bordered="true" Dense="true" EditTrigger="DataGridEditTrigger.Manual">
        <Columns>
            <HierarchyColumn T="Trait" />
            <Column T="Trait" Field="Name" />
            <Column T="Trait" Field="Type" />
            <Column T="Trait" Field="ForWetConditions" />
            <Column T="Trait" CellClass="d-flex justify-end">
                <CellTemplate>
                    <MudButtonGroup>
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="context.Actions.StartEditingItem" />
                    </MudButtonGroup>
                </CellTemplate>
            </Column>
        </Columns>
        <ChildRowContent>
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">TODO: This detail page lol haha</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudGrid>
                        <MudItem xs="2">
                            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                                <MudNumericField Value="context.Item.QualifyingPace" Label="Qualifying pace" Disabled="true" />
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="2">
                            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                                <MudNumericField Value="context.Item.DriverPace" Label="Driver pace" Disabled="true" />
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="2">
                            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                                <MudNumericField Value="context.Item.CarPace" Label="Car pace" Disabled="true" />
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="2">
                            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                                <MudNumericField Value="context.Item.EnginePace" Label="Engine pace" Disabled="true" />
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="2">
                            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                                <MudNumericField Value="context.Item.DriverReliability" Label="Driver reliability" Disabled="true" />
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="2">
                            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                                <MudNumericField Value="context.Item.CarReliability" Label="Driver reliability" Disabled="true" />
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="2">
                            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                                <MudNumericField Value="context.Item.EngineReliability" Label="Driver reliability" Disabled="true" />
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="2">
                            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                                <MudNumericField Value="context.Item.WearMax" Label="Maximum wear" Disabled="true" />
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="2">
                            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                                <MudNumericField Value="context.Item.WearMin" Label="Minimum wear" Disabled="true" />
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="2">
                            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                                <MudNumericField Value="context.Item.RngMin" Label="Minimum RNG" Disabled="true" />
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="2">
                            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                                <MudNumericField Value="context.Item.RngMax" Label="Maximum RNG" Disabled="true" />
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="2">
                            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                                <MudText>
                                    @(context.Item.ForWetConditions ? "Only" : "Doesn't") apply during moist/wet conditions.
                                </MudText>
                            </MudPaper>
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </ChildRowContent>
        <PagerContent>
            <MudDataGridPager T="Trait" />
        </PagerContent>
    </MudDataGrid>
</MudContainer>

@code {
    private List<Trait> TraitNames = new();

    protected override void OnInitialized()
    {
        TraitNames = TraitService.GetTestNames();
    }

    void ModifyTrait(Trait item)
    {
        // TODO: Store edited values
    }

    async Task AddTrait()
    {
        var dialog = await DialogService.ShowAsync<TraitCreate>("Create a new trait");
        var result = await dialog.Result;

        if (!result.Canceled && result.Data != null && result.Data is Trait newTrait)
        {
            TraitNames.Add(newTrait);
        }
    }
}
