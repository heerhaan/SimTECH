@page "/drivers"
@inject DriverService DriverService
@inject TraitService TraitService
@inject IDialogService DialogService

<PageTitle>Drivers</PageTitle>

<MudContainer>
    <MudDataGrid T="Driver" Items="@DriverData" Class="mt-2">
        <ToolBarContent>
            <MudText Typo="Typo.h4">Drivers</MudText>
            <MudSpacer />
            <MudButton Variant="Variant.Outlined" Color="Color.Tertiary" OnClick="AddDriver">New</MudButton>
        </ToolBarContent>
        <Columns>
            <HierarchyColumn T="Driver" />
            <PropertyColumn Property="e => e.FullName" Title="Name" />
            <PropertyColumn Property="e => e.Abbreviation" />
            <PropertyColumn Property="e => e.DateOfBirth" Title="DOB" Format="d" />
            <TemplateColumn T="Driver" Title="Nationality">
                <CellTemplate>
                    <CountryFlag Code="@context.Item.Country" Size="FlagSize.Small" IncludeName="true" />
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn T="Driver" Sortable="false">
                <CellTemplate>
                    <MudButtonGroup Size="@Size.Small" Class="ml-auto">
                        <MudIconButton Icon="@Icons.Material.Outlined.Edit" OnClick="@(async () => await UpdateDriver(context.Item))" />
                        <MudIconButton Icon="@Icons.Material.Outlined.Delete" Color="Color.Error" OnClick="@(async () => await DeleteDriver(context.Item))" />
                    </MudButtonGroup>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
        <ChildRowContent>
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">@context.Item.FullName</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudText>Item is currently: @context.Item.State</MudText>
                </MudCardContent>
            </MudCard>
        </ChildRowContent>
        <PagerContent>
            <MudDataGridPager T="Driver" />
        </PagerContent>
    </MudDataGrid>
</MudContainer>

@code {
    private List<Driver> DriverData = new();

    protected override async Task OnInitializedAsync()
    {
        DriverData = await DriverService.GetDrivers();
    }

    async Task AddDriver() => await UpdateDriver(new Driver());
    async Task UpdateDriver(Driver item)
    {
        var driverTraits = await TraitService.GetTraitsOfType(Entrant.Driver);

        var parameters = new DialogParameters
        {
            ["Driver"] = item,
            ["Traits"] = driverTraits
        };
        var dialog = await DialogService.ShowAsync<DriverEditor>("Modify driver", parameters);
        var result = await dialog.Result;

        if (!result.Canceled && result.Data != null && result.Data is Driver updatedItem)
        {
            await DriverService.UpdateDriver(updatedItem);
            DriverData = await DriverService.GetDrivers();
        }
    }

    async Task DeleteDriver(Driver driver) => await DriverService.DeleteDriver(driver);
}
