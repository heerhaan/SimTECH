@page "/tracks"
@layout SetupLayout

@inject TrackService TrackService
@inject IDialogService DialogService

<PageTitle>Tracks</PageTitle>

<MudContainer>
    <h2>Tracks</h2>
    <MudPaper Class="d-flex align-center pa-2 mx-2 my-2">
        <MudButton Variant="Variant.Text" Color="Color.Success" OnClick="@((e) => AddTrack())">New</MudButton>
    </MudPaper>
    <MudDataGrid T="Track" Items="@TrackNames" EditMode="DataGridEditMode.Cell" CommittedItemChanges="ModifyTrack" Bordered="true" Dense="true" EditTrigger="DataGridEditTrigger.Manual">
        <Columns>
            <Column T="Track" Field="Name" />
            <Column T="Track" Field="Country">
                <CellTemplate>
                    <CountryFlag Code="@context.Item.Country" Size="FlagSize.Small" IncludeName="true" />
                </CellTemplate>
            </Column>
            <Column T="Track" Field="Length" />
            <Column T="Track" Field="AeroMod" />
            <Column T="Track" Field="ChassisMod" />
            <Column T="Track" Field="PowerMod" />
            <Column T="Track" Field="QualifyingMod" />
            <Column T="Track" CellClass="d-flex justify-end">
                <CellTemplate>
                    <MudButtonGroup>
                        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="@context.Actions.StartEditingItem" />
                    </MudButtonGroup>
                </CellTemplate>
            </Column>
        </Columns>
        <PagerContent>
            <MudDataGridPager T="Track" />
        </PagerContent>
    </MudDataGrid>
</MudContainer>

@code {
    private List<Track> TrackNames = new();

    protected override void OnInitialized()
    {
        TrackNames = TrackService.GetTestNames();
    }

    void ModifyTrack(Track item)
    {
        // TODO: Store edited values
    }

    async Task AddTrack()
    {
        var dialog = await DialogService.ShowAsync<TrackCreate>("Create a new track");
        var result = await dialog.Result;

        if (!result.Canceled && result.Data != null && result.Data is Track newTrack)
        {
            TrackNames.Add(newTrack);
        }
    }
}
