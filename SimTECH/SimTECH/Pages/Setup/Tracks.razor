@page "/tracks"
@inject TrackService TrackService
@inject IDialogService DialogService

<PageTitle>Tracks</PageTitle>

<MudContainer>
    <MudPaper Class="d-flex justify-space-between pa-2 mx-2 my-2">
        <MudText Typo="Typo.h4">Tracks</MudText>
        <MudButton Variant="Variant.Text" Color="Color.Success" OnClick="AddTrack">New</MudButton>
    </MudPaper>
    <MudDataGrid T="Track" Items="@trackData" ReadOnly="@_readOnly" EditMode="DataGridEditMode.Cell" CommittedItemChanges="ModifyTrack"
                 Bordered="true" Dense="true" EditTrigger="DataGridEditTrigger.OnRowClick">
        <Columns>
            <Column T="Track" Field="Name" />
            <Column T="Track" Field="Country">
                <CellTemplate>
                    <CountryFlag Code="@context.Item.Country" Size="FlagSize.Small" IncludeName="true" />
                </CellTemplate>
                <EditTemplate>
                    <MudCountrySelect @bind-Value="context.Item.Country" />
                </EditTemplate>
            </Column>
            <Column T="Track" Field="Length" />
            <Column T="Track" Field="AeroMod" />
            <Column T="Track" Field="ChassisMod" />
            <Column T="Track" Field="PowerMod" />
            <Column T="Track" Field="QualifyingMod" />
        </Columns>
        <PagerContent>
            <MudDataGridPager T="Track" />
        </PagerContent>
    </MudDataGrid>
</MudContainer>

@code {
    private bool _readOnly = false;
    private List<Track> trackData = new();

    protected override async Task OnInitializedAsync()
    {
        trackData = await TrackService.GetTracks();
    }

    async Task ModifyTrack(Track item)
    {
        await TrackService.UpdateTrack(item);
    }

    async Task AddTrack()
    {
        var dialog = await DialogService.ShowAsync<TrackEditor>("Create a new track");
        var result = await dialog.Result;

        if (!result.Canceled && result.Data != null && result.Data is Track newTrack)
        {
            trackData.Add(newTrack);
        }
    }
}
