@using MudExtensions

<MudDialog>
    <TitleContent>
        <MudText>
            Driver moment
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm @ref="form" @bind-IsValid="@isValid" @bind-Errors="@errors">
            <MudGrid>
                <MudItem xs="8">
                    <MudPaper Elevation="15" Class="pa-2 mud-height-full">
                        <MudStack>
                            <MudStack Row="true" Spacing="4">
                                <MudTextField T="string"
                                              @bind-Value="Model.FirstName"
                                              Label="First Name"
                                              Class="field-md"
                                              Required="true"
                                              RequiredError="First name is required" />
                                <MudTextField T="string"
                                              @bind-Value="Model.LastName"
                                              Label="Last Name"
                                              Class="field-md"
                                              TextChanged="AutoUpdateAbbreviation"
                                              Required="true"
                                              RequiredError="First name is required" />
                            </MudStack>
                            <MudTextField T="string"
                                          @bind-Value="Model.Abbreviation"
                                          Label="Abbreviation"
                                          Class="field-sm"
                                          Required="true"
                                          RequiredError="Field is required" />
                            <MudDatePicker @bind-Date="@dateSetter"
                                           Editable="true"
                                           Label="Date of Birth"
                                           Class="field-md" />
                            <MudCountrySelect @bind-Value="Model.Country"
                                              Class="field-md" />
                            <MudTextField T="string"
                                          @bind-Value="Model.Biography"
                                          Label="Biography"
                                          Lines="5"
                                          Validation="@(new Func<string, string?>(TestValidation))" />

                            <MudText Typo="Typo.subtitle1">Toggles</MudText>
                            <MudDivider />
                            <MudSwitchM3 @bind-Checked="Model.Alive"
                                         Label="Alive"
                                         Color="Color.Secondary"
                                         ThumbIcon="@Icons.Material.Filled.Done"
                                         ThumbOffIcon="@Icons.Material.Filled.Close" />
                        </MudStack>
                    </MudPaper>
                </MudItem>

                <MudItem xs="4">
                    <MudPaper Elevation="15" Class="pa-2 mud-height-full">
                        <MudText Typo="Typo.subtitle1">Traits</MudText>
                        <MudChipSet @bind-SelectedValues="selectedTraits" MultiSelection="true" Filter="true">
                            @foreach (var trait in Traits)
                            {
                                <MudChip Text="@trait.Name" Value="@trait.Id"></MudChip>
                            }
                        </MudChipSet>

                        <MudText>Validation messages</MudText>
                        @foreach (var error in errors)
                        {
                            <MudText Color="@Color.Error">@error</MudText>
                        }
                    </MudPaper>
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" Disabled="@(!isValid)" OnClick="Submit">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] protected MudDialogInstance? DriverDialog { get; set; }

    [Parameter] public Driver? Driver { get; set; }
    [Parameter] public List<Trait> Traits { get; set; } = new();

    private EditDriverModel Model;
    private DateTime? dateSetter { get; set; }
    private ICollection<object>? selectedTraits { get; set; }

    private bool isValid;
    private string[] errors = { };
    private MudForm form;

    protected override void OnInitialized()
    {
        Model = new EditDriverModel(Driver);
        dateSetter = Model.DateOfBirth;
        selectedTraits = Model.DriverTraits.Select(e => e.TraitId).Cast<object>().ToList();
    }

    void AutoUpdateAbbreviation()
    {
        if (Model.LastName?.Length > 2 == true)
            Model.Abbreviation = Model.LastName.Substring(0, 3).ToUpperInvariant();
    }

    private string? TestValidation(string text)
    {
        if (text.Contains("cringe"))
            return "Sorry, this is too cringe";

        return null;
    }

    private async Task Submit()
    {
        await form.Validate();
        if (!form.IsValid)
            return;

        Model.DateOfBirth = dateSetter.GetValueOrDefault();

        if (selectedTraits != null)
        {
            Model.DriverTraits = selectedTraits
                .Cast<long>()
                .Select(e => new EditDriverTraitModel { DriverId = Model.Id, TraitId = e })
                .ToList();
        }

        if (Model.IsDirty)
        {
            DriverDialog?.Close(DialogResult.Ok(Model.Record));
        }
    }

    private void Cancel() => DriverDialog?.Cancel();
}
