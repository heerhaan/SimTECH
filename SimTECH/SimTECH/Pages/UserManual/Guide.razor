@page "/guide"
@using SimTECH.Pages.UserManual
@using SimTECH.Pages.UserManual.Topics
@using SimTECH.Pages.UserManual.Topics.Race
@using SimTECH.Pages.UserManual.Topics.Setup

<PageTitle>Guide</PageTitle>

<MudGrid>
    <MudItem xs=12>
        <MudPaper Elevation="15" Height="75px" Class="d-flex flex-column justify-center align-center pa-4">
            <MudText Typo="Typo.h4">Guide</MudText>
        </MudPaper>
    </MudItem>
    <MudItem xs="3">
        <MudPaper Class="mud-height-full">
            <MudTreeView T="string" Color="Color.Secondary" Hover="true" SelectedValueChanged="ActiveTopicChanged">
                <MudTreeViewItem @bind-Expanded="@folderOneExpanded" Value="@("Setup")" Icon="@(folderOneExpanded ? Icons.Custom.Uncategorized.FolderOpen : Icons.Custom.Uncategorized.Folder)">
                    <MudTreeViewItem Value="@("Drivers")" Icon="@Icons.Custom.FileFormats.FileImage" />
                    <MudTreeViewItem Value="@("Subtopic 2")" Icon="@Icons.Custom.FileFormats.FileVideo" />
                </MudTreeViewItem>
                <MudTreeViewItem @bind-Expanded="@folderTwoExpanded" Value="@("Racing")" Icon="@(folderTwoExpanded ? Icons.Custom.Uncategorized.FolderOpen : Icons.Custom.Uncategorized.Folder)">
                    <MudTreeViewItem Value="@("Overtaking")" Icon="@Icons.Custom.FileFormats.FileExcel" />
                </MudTreeViewItem>
            </MudTreeView>
        </MudPaper>
    </MudItem>
    <MudItem xs="9">
        <MudPaper Class="mud-height-full">
            <MudText Style="width: 100%" Typo="@Typo.subtitle1">@currentTopic</MudText>
            <DynamicComponent Type="TopicContent" />
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    Type TopicContent { get; set; } = typeof(Hello);
    string currentTopic = "None";
    bool folderOneExpanded;
    bool folderTwoExpanded;

    void ActiveTopicChanged(string activeTopic)
    {
        currentTopic = activeTopic;

        switch (activeTopic)
        {
            case "Drivers": TopicContent = typeof(DriverTopic); break;
            case "Racing": TopicContent = typeof(Racing); break;
            case "Overtaking": TopicContent = typeof(Overtaking); break;
            default: TopicContent = typeof(UnknownTopic); break;
        }
    }
}
