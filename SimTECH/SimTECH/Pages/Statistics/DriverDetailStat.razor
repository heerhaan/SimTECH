@inject DriverService _driverService

<MudDialog>
    <TitleContent>
        <MudText>Detailed statistics for a driver</MudText>
    </TitleContent>
    <DialogContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
            <MudPaper Width="1100px">
                @if (!loading)
                {
                    <MudStack Row="true" Justify="Justify.SpaceBetween" Class="mud-width-full">
                        <MudPaper>
                            <MudSelect T="Driver"
                            @bind-Value="@selectedDriver"
                                       Label="Driver"
                                       Class="field-lg">
                                @foreach (var driver in Drivers)
                                {
                                    <MudSelectItem Value="@driver">
                                        <MudStack Row="true" AlignItems="AlignItems.Center" Class="pa-0">
                                            <MudText>@driver.FullName</MudText>
                                            <MudSpacer />
                                            <CountryFlag Code="@driver.Country" Size="FlagSize.Tiny" />
                                        </MudStack>
                                    </MudSelectItem>
                                }
                            </MudSelect>
                        </MudPaper>
                        <MudPaper>
                            <MudText Color="Color.Secondary">This area can optionally be used to further specify the detail data</MudText>
                        </MudPaper>
                    </MudStack>

                    @if (selectedDriver != null)
                    {
                        <MudText>Selected is @(selectedDriver.FullName)</MudText>
                    }
                }
            </MudPaper>
        </MudContainer>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter] protected MudDialogInstance? StatDialog { get; set; }

    List<Driver> Drivers;

    Driver? selectedDriver;

    bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        Drivers = await _driverService.GetDrivers();

        loading = false;
    }
}
