@inject LeagueService LeagueService

<MudDialog>
    <TitleContent>
        <MudText>
            Add new league
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@editLeague">
            <MudCard>
                <MudCardContent>
                    <MudTextField T="string" @bind-Value="editLeague.Name" Label="Name" />
                </MudCardContent>
            </MudCard>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    protected MudDialogInstance? LeagueDialog { get; set; }

    [Parameter]
    public long leagueId { get; set; }

    private EditLeague editLeague = new();

    protected override async Task OnInitializedAsync()
    {
        if (leagueId != 0)
        {
            var leagueObject = await LeagueService.GetLeagueById(leagueId);

            if (leagueObject != null)
                editLeague = new EditLeague(leagueObject);
        }
    }

    private async Task Submit()
    {
        if (editLeague?.IsDirty ?? false)
        {
            var modLeague = editLeague.Record;

            await LeagueService.CreateLeague(modLeague);

            LeagueDialog?.Close(DialogResult.Ok(modLeague));
        }
    }

    private void Cancel() => LeagueDialog?.Cancel();
}
