<MudText Typo="Typo.h6">Race</MudText>
<MudDivider Class="my-1" />

<MudTable T="GlossaryItem" Items="@GlossaryTerms.OrderBy(e => e.Term)" Dense="true">
    <HeaderContent>
        <MudTh>Term</MudTh>
        <MudTh>Explain</MudTh>
        <MudTh>Synonyms</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>
            <MudText>@context.Term</MudText>
        </MudTd>
        <MudTd>
            <MudText Typo="Typo.body2">@context.Explain</MudText>
        </MudTd>
        <MudTd>
            <MudText>@(string.Join(", ", context.Synonyms))</MudText>
        </MudTd>
    </RowTemplate>
</MudTable>

@code {
    private static readonly List<GlossaryItem> GlossaryTerms = new()
        {
            new GlossaryItem("Advance",
                @"A single round of calculation for every driver during a race. Equivalent for a certain distance
                traveled during a race (default is 10km).",
                "Calculation"),
            new GlossaryItem("Session",
                @"The sessions during a race week which occur before the race.
                Usually refers to practice and qualifying."),
        };

    internal class GlossaryItem
    {
        public GlossaryItem(string? term, string? explain, params string[] synonyms)
        {
            Term = term ?? string.Empty;
            Explain = explain ?? string.Empty;
            Synonyms = synonyms ?? Array.Empty<string>();
        }

        public string Term { get; set; }
        public string Explain { get; set; }
        public string[] Synonyms { get; set; }
    }
}