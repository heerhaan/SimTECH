@page "/guide"

@using SimTECH.Pages.Guide.Topics
@using SimTECH.Pages.Guide.Topics.RaceCategory

@inject BreadcrumbProvider _bread

<PageTitle>Guidebook</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
    <MudGrid Spacing="1">
        <MudItem xs=12>
            <MudPaper Elevation="15" Height="75px" Class="d-flex flex-column justify-center align-center">
                <MudText Typo="Typo.h3">FAG</MudText>
            </MudPaper>
        </MudItem>
        <MudItem xs="3">
            <MudPaper Class="mud-height-full">
                <MudTreeView T="Type" Color="Color.Secondary" Hover="true" SelectedValueChanged="ActiveTopicChanged">
                    @foreach (var cat in GuideItems.OrderBy(e => e.Order))
                    {
                        <MudTreeViewItem @bind-Expanded="cat.Expanded"
                                         Text="@cat.Title"
                                         Value="@cat.Type"
                                         Icon="@(cat.Expanded ? cat.ExpandedIcon : cat.Icon)">
                            @foreach (var child in cat.Children.OrderBy(e => e.Order))
                            {
                                <MudTreeViewItem Text="@child.Title"
                                                 Value="@child.Type"
                                                 Icon="@child.Icon" />
                            }
                        </MudTreeViewItem>
                    }
                </MudTreeView>
            </MudPaper>
        </MudItem>
        <MudItem xs="9">
            <MudPaper Elevation="25" Class="px-2 py-4 mud-height-full">
                <DynamicComponent Type="@ActiveTopic" />
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    public Type ActiveTopic { get; set; } = typeof(Intro);

    private static readonly List<GuideGroupItem> GuideItems = new()
    {
        new GuideGroupItem
        {
            Title = "FAQ",
            Icon = Icons.Custom.FileFormats.FileExcel,
            ExpandedIcon = Icons.Custom.FileFormats.FileExcel,
            Type = typeof(Intro),
            Order = 0,
        },
        new GuideGroupItem
        {
            Title = "Quick start",
            Icon = Icons.Custom.FileFormats.FileExcel,
            ExpandedIcon = Icons.Custom.FileFormats.FileExcel,
            Type = typeof(QuickStartTopic),
            Order = 5,
        },
        new GuideGroupItem
        {
            Title = "Glossary",
            Icon = Icons.Material.Filled.MenuBook,
            ExpandedIcon = Icons.Material.Filled.MenuBook,
            Type = typeof(Glossary),
            Order = 99,
        },
        new GuideGroupItem
        {
            Title = "Racing information",
            Icon = Icons.Custom.Uncategorized.Folder,
            ExpandedIcon = Icons.Custom.Uncategorized.FolderOpen,
            Type = typeof(UnknownTopic),
            Order = 10,
            Children = new()
            {
                new GuideItem("Practice", IconCollection.Polygon, typeof(PracticeTopic)),
                new GuideItem("Qualifying", IconCollection.Polygon, typeof(QualifyingTopic)),
                new GuideItem("Race", IconCollection.Polygon, typeof(RaceTopic)),
                new GuideItem("Distance", IconCollection.Polygon, typeof(Distance)),
                new GuideItem("Advance", IconCollection.Polygon, typeof(Advance)),
                new GuideItem("Reliability", IconCollection.Polygon, typeof(Reliability)),
                new GuideItem("Strategy", IconCollection.Polygon, typeof(Strategy)),
                new GuideItem("Overtaking", IconCollection.Polygon, typeof(Overtaking)),
                new GuideItem("Safety car", IconCollection.AlertTriangle, typeof(SafetyMoment)),
                new GuideItem("Modifiers", IconCollection.Polygon, typeof(Modifiers)),
            }
        },
    };

    protected override void OnInitialized()
    {
        _bread.SetBreadcrumbs(new List<BreadcrumbItem>()
        {
            new BreadcrumbItem("Home", href: "/"),
            new BreadcrumbItem("Guide", href: "guide", disabled: true),
        });
    }

    private void ActiveTopicChanged(Type? activeTopic)
    {
        if (activeTopic != null)
            ActiveTopic = activeTopic;
    }
}
