@inherits LayoutComponentBase
@inject SimAuthenticationStateProvider SimAuthenticationStateProvider

<MudThemeProvider @bind-IsDarkMode="@_isDarkTheme" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<PageTitle>SimTECH</PageTitle>

<MudLayout>
    <MudAppBar Elevation="1">
        <MudText Typo="Typo.h5" Class="ml-2">SimTECH</MudText>
        <MudBreadcrumbs></MudBreadcrumbs>
        <MudSpacer />
        <MudSwitch @bind-Checked="@_isDarkTheme" Color="Color.Primary" T="bool" Label="Light/Dark"></MudSwitch>
        <MudMenu AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
            <ActivatorContent>
                <MudAvatar Color="Color.Secondary">A</MudAvatar>
            </ActivatorContent>
            <ChildContent>
                <AuthorizeView>
                    <Authorized>
                        <MudMenuItem OnClick="LogoutAsync">Logout</MudMenuItem>
                    </Authorized>
                    <NotAuthorized>
                        <MudMenuItem>
                            <MudNavLink Href="/login" Match="NavLinkMatch.Prefix">Login</MudNavLink>
                        </MudMenuItem>
                    </NotAuthorized>
                </AuthorizeView>
            </ChildContent>
        </MudMenu>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen" ClipMode="DrawerClipMode.Always" Variant="DrawerVariant.Mini">
        <NavMenu />
        <MudSpacer />
        <MudIconButton Icon="@_drawerIcon" Color="Color.Tertiary" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private MudTheme _theme = new();

    private string notification = string.Empty;
    private bool _drawerOpen = true;
    private bool _isDarkTheme = true;
    private string _drawerIcon = Icons.Material.Filled.KeyboardDoubleArrowLeft;

    private List<BreadcrumbItem> _breadcrumbItems = new()
    {
        new BreadcrumbItem("Home", href: "#"),
        new BreadcrumbItem("Example", href: "#"),
        new BreadcrumbItem("Example2", href: null, disabled: true)
    };

    async Task LogoutAsync()
    {
        await SimAuthenticationStateProvider.LogoutAsync();

        notification = "Logged out!";
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
        _drawerIcon = _drawerOpen 
            ? Icons.Material.Filled.KeyboardDoubleArrowLeft
            : Icons.Material.Filled.KeyboardDoubleArrowRight;
    }
}