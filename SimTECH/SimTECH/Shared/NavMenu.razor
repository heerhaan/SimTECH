@inject ProtectedLocalStorage _storage

<MudNavMenu Color="Color.Primary">
    <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>

    <MudNavGroup Title="Entrants" Icon="@Icons.Material.Filled.Settings" ExpandedChanged="OnEntrantExpand">
        <MudNavLink Href="/drivers" Match="NavLinkMatch.Prefix" Icon="@IconCollection.Helmet">Drivers</MudNavLink>
        <MudNavLink Href="/teams" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.CarRepair">Teams</MudNavLink>
        <MudNavLink Href="/engines" Match="NavLinkMatch.Prefix" Icon="@IconCollection.Engine">Engines</MudNavLink>
        <MudNavLink Href="/tracks" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.AddRoad">Tracks</MudNavLink>
        <MudNavLink Href="/traits" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.FlashOn">Traits</MudNavLink>
    </MudNavGroup>

    <MudNavGroup Title="Race factors" Icon="@IconCollection.SteeringWheel" ExpandedChanged="OnFactorExpand">
        <MudNavLink Href="/manufacturers" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Garage">Suppliers</MudNavLink>
        <MudNavLink Href="/tyres" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.LocalGasStation">Tyres</MudNavLink>
        <MudNavLink Href="/incidents" Match="NavLinkMatch.Prefix" Icon="@IconCollection.TrafficCone">Incidents</MudNavLink>
        <MudNavLink Href="/climates" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Cloud">Climates</MudNavLink>
    </MudNavGroup>

    <MudNavLink Href="/leagues" Match="NavLinkMatch.Prefix" Icon="@IconCollection.Trophy">Leagues</MudNavLink>

    <MudNavLink Href="/seasons" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Flag">Seasons</MudNavLink>

    <MudNavLink Href="/stats" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.BarChart">Stats</MudNavLink>

    <MudNavLink Href="/legacy" Match="NavLinkMatch.Prefix" Icon="@IconCollection.Planet">Legacy</MudNavLink>

    <MudNavLink Href="/test" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Lightbulb">Test</MudNavLink>

    @*<MudNavGroup Title="Test" Icon="@IconCollection.Pyramid" @bind-Expanded="@testExpanded">
        <MudNavLink Href="/test" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Lightbulb">Test</MudNavLink>
        <MudNavLink Href="/contracts" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.EditNote">Contracts</MudNavLink>
        <MudNavLink Href="/sponsors" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.EditNote">Sponsors</MudNavLink>
        <MudNavLink Href="/finances" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.EditNote">Finances</MudNavLink>
    </MudNavGroup>*@
</MudNavMenu>

@code {
    bool entrantsExpanded = true;
    bool factorsExpanded = true;
    //bool testExpanded = false;

    private const string entrantExpansionKey = "entrantMenuExpanded";
    private const string factorExpansionKey = "factorMenuExpanded";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var storedEntrantsExpanded = await _storage.GetAsync<bool>(entrantExpansionKey);
            var storedFactorsExapnded = await _storage.GetAsync<bool>(factorExpansionKey);

            entrantsExpanded = storedEntrantsExpanded.Success && storedEntrantsExpanded.Value;
            factorsExpanded = storedFactorsExapnded.Success && storedFactorsExapnded.Value;
        }
    }

    private async Task OnEntrantExpand(bool toggle)
    {
        entrantsExpanded = toggle;
        await _storage.SetAsync(entrantExpansionKey, toggle);
    }

    private async Task OnFactorExpand(bool toggle)
    {
        factorsExpanded = toggle;
        await _storage.SetAsync(factorExpansionKey, toggle);
    }
}