<MudContainer>
    @ChildContent
    <MudTable Items="@Items" Dense="true">
        <HeaderContent>
            <MudTh>Type</MudTh>
            <MudTh>Comparer</MudTh>
            <MudTh>Minimum</MudTh>
            <MudTh>Maximum</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Type">@context.Type</MudTd>
            <MudTd DataLabel="Comparer">@context.Comparer</MudTd>
            <MudTd DataLabel="Minimum">@context.Minimum</MudTd>
            <MudTd DataLabel="Maximum">@context.Maximum</MudTd>
        </RowTemplate>
        <RowEditingTemplate>
            <MudTd DataLabel="Type">Type</MudTd>
            <MudTd DataLabel="Comparer">
                <MudNumericField @bind-Value="@context.Comparer" Required />
            </MudTd>
            <MudTd DataLabel="Minimum">
                <MudNumericField @bind-Value="@context.Minimum" Required />
            </MudTd>
            <MudTd DataLabel="Maximum">
                <MudNumericField @bind-Value="@context.Maximum" Required />
            </MudTd>
        </RowEditingTemplate>
        <FooterContent>
            <MudTFootRow>
                <MudTd>
                    <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Tertiary" OnClick="AppendRangeRow"></MudIconButton>
                </MudTd>
            </MudTFootRow>
        </FooterContent>
    </MudTable>
</MudContainer>

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public IList<EditDevRangeModel> Items { get; set; } = new List<EditDevRangeModel>();

    [Parameter]
    public RangeType RangeType { get; set; }
    
    private void AppendRangeRow()
    {
        Items.Add(new EditDevRangeModel()
            {
                Type = RangeType,
                Comparer = 10,
                Minimum = -2,
                Maximum = 2
            });
    }
}
