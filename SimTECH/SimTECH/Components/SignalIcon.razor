<MudPaper Class="absolute overflow-visible" Style="@_styles">
    <MudIcon Icon="@_signalIcon"
             Size="@Size"
             Color="@_signalColour" />
</MudPaper>

@code {
    [Parameter]
    public double LapPercentage { get; set; }
    [Parameter]
    public string Signal { get; set; }
    [Parameter]
    public int Index { get; set; }
    [Parameter]
    public Size Size { get; set; } = Size.Small;

    // We might want to make the following common somewhere
    private string _signalIcon
    {
        get
        {
            switch (Signal)
            {
                case "DriverDnf":
                    return IconCollection.HelmetOff;
                case "CarDnf":
                    return IconCollection.CarCrash;
                case "EngineDnf":
                    return IconCollection.EngineOff;
                case "Mistake":
                    return Icons.Material.Filled.ErrorOutline;
                case "Pitstop":
                    return Icons.Material.Filled.LocalGasStation;
                case "Swap":
                    return Icons.Material.Filled.SwapVert;
                case "Caution":
                    return IconCollection.AlertTriangle;
                case "Death":
                    return IconCollection.Skull;
                default:
                    return Icons.Material.Filled.QuestionMark;
            }
        }
    }

    // We might want to make the following common somewhere
    private Color _signalColour
    {
        get
        {
            switch (Signal)
            {
                case "DriverDnf":
                case "CarDnf":
                case "EngineDnf":
                    return Color.Error;
                case "Mistake":
                case "Caution":
                    return Color.Warning;
                case "Pitstop":
                    return Color.Success;
                case "Swap":
                    return Color.Info;
                case "Death":
                    return Color.Inherit;
                default:
                    return Color.Warning;
            }
        }
    }

    private string _styles
    {
        get
        {
            var styles = $"margin-left:{LapPercentage}%;margin-right:-{(Index * 2)}px;z-index:{(1 + Index)}";

            styles += ";line-height:0;background-color:var(--mud-palette-surface)";

            if (Signal == "Death")
                styles += ";color: white";

            return styles;
        }
    }
}
